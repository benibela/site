<file>
  <description language="de">BeniBela online ist eine Seite über die Programmierung mit Delphi, und eine Downloadseite für Tools und Spiele.</description>
  <description language="en">BeniBela online is a site about the programming with Delphi, and it is also a download page for tools and games.</description>
  <keywords language="de">BeniBela, Benito van der Zander, Spiele, Tools, Delphi, Komponenten, Scherzprogramme</keywords>
  <keywords language="en">BeniBela, Benito van der Zander, games, tools, Delphi, components, joke programs</keywords>
  <prevent-content-title>YES</prevent-content-title>
  <content>&lt;h2>News&lt;/h2></content>
    
    <news>
    <new date="06. Nov 2012"><text language="de">
    Die <a href="sources_de.html#internettools">Internet Tools</a> unterstützen nun XQuery, statt nur XPath 2!<br/> Und die variant-Klassen in der API wurden durch Interfaces ersetzt, so dass sie jetzt ref-counted sind.
    </text><text language="en">
    The <a href="sources_en.html#internettools">Internet Tools</a> support now XQuery, instead of only XPath 2! <br/> And all the variant-classes in the API were replaced by ref-counted interfaces.
    </text></new>
    <new date="26. Sep 2012"><text language="de">
    Mal wieder ein Update:
    <ul><li><a href="sources_de.html#internettools">Internet Tools</a>: Sie unterstützen nun CSS 3 Selektoren, direkt und innerhalb von XPath-Ausdrücken. Und es gibt eine XPath-Funktion <code>form</code>, die das HTTP-Request für eine HTML-Form berechnet und als Objekt zurückgibt. Die Internetaccess-Klasse gibt einem Zugriff auf die HTTP-Header, und der Htmltreeparser erkennt die Zeichenkodierung auch dann, wenn die Angabe im http-equiv meta-Tag <i>falsch</i> ist und einem korrekten Content-Type Header widerspricht (Da hat die Münchener Stadtbücherei wirklich einen <i>super</i> programmierten Katalog). <br/> Die Internet Tools enthalten nun also die Klasse für Mehrseitenabfrageskripts von VideLibri, und es gibt ein  <a href="http://videlibri.sourceforge.net/xidel.html">Commandlinetool Xidel</a> als Wrapper um die Internet Tools mit dem man Templates und XPathausdrücke auf Webseiten anwenden kann, ohne Pascal zu kennen oder Büchereien zu stören. <br/> Und es gibt nun ein <a href="http://userscripts.org/scripts/show/144991">Greasemonkey-Skript</a>, das die Templates für VideLibri/Xidel automatisch erstellen kann, wenn man die entsprechenden Werte in Firefox markiert.<br/>Nun soll ich den XPath parser zu XQuery ausbauen, oder nicht? So groß ist der Unterschied nicht...</li>
    <li><a href="sources_de.html#rcmdline">TCommandLineReader</a>: mein Kommandozeilenparser funktioniert nun auch unter Linux. (er hat früher nicht funktioniert, weil die fpc RTL-Funktion zum gesamten Kommandozeilenauslesen unter Linux keine einfachen Anführungszeichen unterstützt! Und umgekehrt funktioniert die RTL-Funktion zum Lesen der aufgeteilten Argumente unter Windows nicht mit einfachen Anführungszeichen! Weshalb ich den Kommandozeilenparser überhaupt erst geschrieben hatte...)<br/>Und es gibt jetzt eine Unterklasse, die als cgi-Service läuft und die Argumente von GET/POST-Requests liest anstatt von der Kommandozeile.</li>
    <li>TeXstudio: da gibt es immer neue Features...</li>
    </ul>
    </text>
        
    <text language="en">
    Some updates: 
    <ul><li><a href="sources_en.html#internettools">Internet Tools</a>: They do now (well, since a month) support css 3 selectors, standalone or within XPath expressions, and now have a new XPath function <code>form</code> that converts a html form in an object describing the corresponding http request. The internet access class lets you read/write the http header, and the html tree parser will choose the correct encoding, if the Content-Type header and the http-equiv meta tag specify different encodings. <br/> I also forked the multipage query scripts/templates from VideLibri in a new class that is now part of the internettools, and made a command line tool <a href="http://videlibri.sourceforge.net/xidel.html">Xidel</a> that let you use all the internet functionality of VideLibri/Internet Tools without requiring some stupid libraries (the book kind). <br/> And I wrote a <a href="http://userscripts.org/scripts/show/144991">GreaseMonkey script</a> that can automatically generate the scraping templates (or most of them) for VideLibri/Xidel by selecting the values on the webpage in FireFox.</li>
    <li><a href="sources_en.html#rcmdline">TCommandLineReader</a>: my command line reader does now work on Linux. (it did not work before, because the rtl function I used to read the cmdline does not support single quotes on Linux! Quite ironically, since I wrote the command line reader, because the other parameter-reading rtl function does not support single quotes on Windows!)<br/>I also extended it to read the arguments from GET/POST-requests, instead of only the command line.</li>
    <li>TeXstudio: many, many new features...</li>
    </ul>
    </text>
    </new>
    <new date="03. Mai 2012"><text language="de">
    Mal wieder was neues, auch wenn es nicht so wirklich neu ist: Der &lt;a href="sources_de.html#internettools">Internet-Tools-Parser&lt;/a> ist noch mehr erweitert und  nun eine fast Standard-konforme XPath 2-Implementierung. Zusätzlich unterstützt er jetzt auch eine Art Objekte und die übergeordnete Templatesprache erlaubt auch Abkürzungen für häufige Befehle, wie {...} für &amp;lt;template:read/&amp;gt;. 
    </text><text language="en">
    Another update to the &lt;a href="sources_de.html#internettools">internet tools parser&lt;/a>. It is now almost standard compatible, up to mostly &lt;a href="documentation/internettools/internettoolsxqts.html">rounding issues and missing namespace/dtd/schema support&lt;/a> and my extensions like variable assignments and (new) some kind of objects. And the template language itself allows you now to abbreviate common commands, e.g.  &amp;lt;template:read/&amp;gt; can be written as {...} or &amp;lt;template:loop/&amp;gt; as *.
    
    </text></new>    
    <new date="10. Jul 2011"><text language="de">
    Ich habe den Internet-Tools-&lt;a href="sources_de.html#internettools">Parser&lt;/a> ein wenig erweitert, und nun ist er fast Standard-konforme XPath 2-Implementierung (im wesentlichen gibt es alles bis auf namespaces und das ganze Datenmodellzeugs).  &lt;br>
    Und hier ist ein &lt;a href="others_de.html#cryptsem"> Kryptographieseminarpaper&lt;/a>
    </text><text language="en">
    I added a few constructs to the internet tools parsers, so that the &lt;a href="sources_de.html#internettools">pxp parser&lt;/a> is now a almost standard compliant implementation of XPath 2. (did you know that  <pre>every $x in satisfies satisfies satisfies</pre> is always true?) 
    
    </text></new>
    <new date="25. Mar 2011"><text language="de">Das SIRDSlets-Spiel hat jetzt einen Regenbogenfarbenmodus, obwohl ich den Modus eigentlich weglassen wollte, da er zu leicht ist und in einem Stereogramm-Spiel der Stereogrammmodus am einfachsten sein sollte, aber er sieht hübsch bunt aus.
    </text><text language="en">
    I added a rainbow color mode to the sirdslets game, although I didn't really wanted to include it, because it makes the game to easy to play (i.e. actually playable) in the non sirdslets modes. But it looks nice.
    </text></new>
    <new date="26. Feb 2011"><text language="de">
      Da ja jetzt fast alles auf SF mit öffentlichen Commitlogs ist, habe ich in letzter Zeit keine News mehr darüber geschrieben.&lt;br>
      Aber dies sind die Änderungen der letzten Monate:
      &lt;ul>
      &lt;li> &lt;a href="tools_de.html#regexgen">regexgen&lt;/a>: Ist neues kleines Programm um alle Strings zu finden, die einen regulären Ausdruck erfüllen. (d.h. es arbeitet genau umgekehrt zu allen anderen Regexengines) &lt;/li> 
      &lt;li> bbutils: ein paar behobene Fehler, sehr viel mehr Array-Funktionen, die ganze Unit wird automatisch aus einem Pascal-Template erstellt. &lt;/li> 
      &lt;li> Internet Tools: Das Interface wurde leicht geändert, und ein paar low-level html-Parsingfehler sind behoben. PXPath: Die Variablen sind nun Teil der PXPath-Syntax und werden nachträglich ersetzt, so dass man sie nicht mehr in Gänsefüßchen schreiben soll (darf!). Und es ist noch ähnlicher zum echten XPath (mehr Selektoren und mehr Funktionen). &lt;/li>      
      &lt;li> TreeListView: Die Scrollbargröße wird nicht mehr auf einen negativen Wert gesetzt, wenn die View-Größe 0 ist. (weil sonst Lazarus die Form nicht mehr lädt!)   &lt;/li>
      &lt;li> VideLibri funktioniert nun auch in Berlin; dank Leonid, der mir seine Kontodaten geschickt hat.  &lt;/li>
      &lt;li> SIRDSlets: Neue Hintergründe. (Ich vermute, das Bild muss die Autokorrelation der Helligkeit von mittelgroßen Flecken minimieren, um den besten 3D-Effekt zu erzeugen)  &lt;/li>
      &lt;/ul>
    </text>
    <text language="en">
      Since everything is now on SF with public commit logs, I didn't write any news here, but these are the changes of the last months:
      &lt;ul>
      &lt;li> &lt;a href="tools_en.html#regexgen">regexgen&lt;/a>: a new little program which is the inverse of an usual regex engine and generates all matches to a given regex. (you could use it as a replacement of John's non standard rules if you known a certain structure :-) &lt;/li> 
      &lt;li> bbutils: some bugs fixed, faster, and much more array functions. Latter are all trivial, but tedious to write for all cases, so the complete unit is now auto generated from a Pascal template.  &lt;/li> 
      &lt;li> Internet Tools: Some interfaces are changed and some low-level html parsing bugs are fixed. PXPath: The $..;-variables are now part of the PXPath-syntax, so they can be replaced in  the evaluation step and don't have to be written in quotes anymore (actually must not). And it is more similar to real XPath with support for all selectors and much more functions. &lt;/li>      
      &lt;li> TreeListView: It doesn't set the scrollbar size to a negative value anymore, if the view size is 0. (because stupid Lazarus refuses to open a form with negative sizes instead of clipping the value) &lt;/li>
      &lt;li> SIRDSlets: New backgrounds. (I think the image has to minimize the auto correlation of the brightness of middle large points to generate the best 3d effect.)  &lt;/li>
      &lt;/ul>
    </text>
    </new>
    <new date="11. Okt 2010"><text language="de">
    Huch, was ist denn mit VideLibri los? In den vier Jahren, die es auf dieser Seite lag, wurde es praktisch kein einziges Mal runtergeladen, nun ist es drei Tage auf SourceForge und wurde schon 778 mal runtergeladen. Weitaus öfter als TexMakerX in der gleichen Zeit, obwohl es keine fremden Links darauf gibt, außer mehreren aus Japan (Und wen interessiert es in Japan?). Am Quellcode kann es nicht liegen, der wurde nämlich nicht runtergeladen.
    </text></new>
    <new date="09. Okt 2010"><text language="de">
    VideLibri habe ich jetzt auf &lt;a href="http://videlibri.sourceforge.net">SourceForge&lt;/a> verschoben; hier findet es ja niemand und mittlerweile ist es so groß geworden, dass die Webseite nicht genug Speicher dafür hat.
    </text></new>
    <new date="24. Sep 2010"><text language="de">
      Es gibt jetzt eine neue Videlibri Version (0.998). Ich weiß gar nicht, ob man einen Unterschied zur vorherigen Version bemerken kann, auf jeden Fall habe ich die Templates für die Büchereien mit dem neuen Html-Parser vereinfacht.&lt;br>
      Und eigentlich hatte ich gehofft, dass jemand es von selbst entdeckt, aber da es immer noch niemand verwemdet, verrate ich es mal hier: Im Infodialog von Videlibri, kann man und konnte man schon immer -- wenn man richtig klickt -- Snake spielen!&lt;br>
      Ansonsten habe ich noch ein paar Sachen geändert, zum Beispiel, das sich eine Unit der Internet Tools nicht unter Windows compilern ließ.
    </text><text language="en">I tried to write an automatical sourceforge bugtracker/forum responder, which should be trivial with my internet tools library, but it was surprisingly complicated. First sourceforge does not seem to understand host names in the format hostname:port, which is the default format of synapse. Then sf responds with a lot of redirections which neither my library nor synapse followed. Sf also uses the wrong (not standard compliant, although widely used) http status code for these redirections. And finally sf has banned the user agent "Mozilla 3.0 (compatible)" which was my default agent. It only works with "Mozilla/3.0 (compatible)". And everything is encrypted with https, so you could hardly debug it with Wireshark.&lt;br>
    In the new update I changed that, and you can now compile it on Windows, too.  </text> </new>
    <new date="09. Sep 2010"><text language="de">Heute habe ich noch eine &lt;a href="others_de.html#seminarCV2010">Seminararbeit über Bildsegmentierung&lt;/a> vom letzten Semester hochgeladen. Die Bilder musste ich allerdings stark komprimieren, damit der Text noch so gerade auf die Seite passt (obwohl sie sowieso schon 10 mb größer ist als erlaubt), eigentlich sehen sie also schöner aus. </text> </new>
    <new date="05. Sep 2010">
    <text language="de">Ups, jetzt habe ich tatsächlich im letzen bbutils/internettools-Update &amp;amp;szlig; vermasselt, ich dachte das wäre ein ascii-Zeichen. Mit dem neueun Bugfix unterstützt es nun aber wirklich alle Entities aus dem Standard, selbst die von MathML. </text>
    <text language="en">I broke the &amp;amp;szlig; handling in the latest bbutils/internettools update, now it is fixed and even supports all entities, including those of MathML. </text>
    </new>
    <new date="29. Aug 2010">
    <text language="de">Jetzt gibt es einen neue Version vom &lt;a href="sources_en.html#internettools">HTML-Templatematcher&lt;/a>. Er läuft jetzt tausendmal langsamer mit tausendmal höherem Speicherverbrauch. &lt;br> Die alte Version hat einen NFA mit einer cleveren Heuristik verwendet, um das Template mit der Textdarstellung einer HTML-Datei in O(1) zusätzlichem Speicher und Linearzeit zu vergleichen, die neue Version verwendet wie alle anderen HTML-Parser eine Baumdarstellungen, die O(n) Speicher erfordert und darauf Backtracking mit einer Laufzeit von vielleicht O(k^n).&lt;br>Das ist genau das, was ich eigentlich nicht machen wollte, aber es hat sich rausgestellt, dass die Templates dadurch sehr viel leichter zu verstehen und zu schreiben sind, weil es keinerlei Seiteneffekte mehr gibt. Außerdem benötigt es immer noch nicht mehr als ein paar Millisekunden für das Verarbeiten einer Datei (schneller als das Runterladen der Datei), und der Matcher beweist nun, ob das Template der HTML-Datei entspricht oder nicht. Er ist jetzt auch in drei unabhängige Klassen zerlegt, die sich separat verwenden und leichter testen lassen.&lt;br> Ansonsten haben sich dabei auch die bbutils (Funktionen umbenannt oder entfernt), das TreeListView und die Suchleiste (eine Methode entfernt, um LCL 27190 kompatibel zu sein) geändert. </text>
    <text language="en">I made a new version of my &lt;a href="sources_en.html#internettools">template based html parser&lt;/a>. It is now probably thousand times slower and needs a magnitude more memory.&lt;br>The old version used a  NFA combined with a very clever heuristic, to match the template to the html page directly with O(1) memory and O(n) time, the new version uses simple backtracking on a DOM-like tree -- like everyone else does it --  with O(n) memory and I-don't-know-how-much time (perhaps O(k^n)?).&lt;br>But it still runs in a few milliseconds, it is easier to understand the templates, and most important, the matcher/parser can now prove that a matching is possible or not. I also splitted it into three separate classes which makes it more easy to test.&lt;br>Furthermore I had to change with the parser the bbutils (functions renamed or removed), the TreeListView and the search bar (A method removed to be LCL 27190 compatible). </text>
    </new>
    <new date="26. Aug 2010">
    <text language="de">Als ich gerade den vorherigen Artikel auf "unübersetzt" setzen wollte (was ich dann aber doch nicht gemacht habe, da die Textfarbe dadurch grau wird, und das nicht zu den bunten Tabellen passt), habe ich gemerkt, dass JAXMLP überhaupt keine Klammern in den If-Bedingungen erlaubt hat, warum auch immer, vielleicht weil es den Schwierigkeitsgrad fürs Parsen von trivial auf einfach erhöht. Die neue Version unterstützt sie jetzt aber.</text>
    <text language="en">When I wanted to display the article below as "untranslated" on the German version, I noticed that JAXMLP did not support parentheses in if-conditions (perhaps because it would increase the implementation difficulty from trivial to easy). Anyways, I changed it and you can now use brackets there.  </text>
    </new>
        <new date="26. Aug 2010">
<text>
I just started to rewrite my fpc html template parser (which of course involves hours of debugging and patching Lazarus, before I can start to program anything else) and found two bugs due to an invalid string->pchar conversion. And although this is an absolutely trivial conversion, no one seems to have examined and described, how to do it best. So, here is a detailed analysis:

&lt;h4>Converting ansistring to pchar&lt;/h4>
&lt;p>
Converting a &lt;a href="http://www.freepascal.org/docs-html/ref/refsu10.html">ansistring&lt;/a> to &lt;a href="http://www.freepascal.org/docs-html/ref/refsu13.html">pchar&lt;/a> should be pretty simple, because  the text itself is stored in almost the same way in both cases. 
If you have a variable str: string, there are three popular ways to convert it to a pchar: pchar(str), @str[1] and pchar(pointer(str)), but it is not obvious which is the best way to do the conversion.

&lt;p>
If you don't want to bother with the technical details, &lt;i>you can always use &lt;code>pchar(str)&lt;/code>&lt;/i> and treat the result as a read-only pchar. But this is not the most efficient way to convert the string, and the following table summarizes the advantages (always green) and disadvantages (always red) of the other methods:

&lt;p>
&lt;table style="margin-left:auto;margin-right:auto">
&lt;thead>
&lt;tr>&lt;td class="invisible">&lt;/td>&lt;td>Example&lt;/td>&lt;td>No copy&lt;/td>&lt;td>Branch free&lt;/td>&lt;td>Nil aware&lt;/td>&lt;td>Range safe&lt;/td>&lt;td>$H- safe&lt;/td>&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>&lt;td>Explicit&lt;/td> &lt;td>&lt;code>p := pchar(str)&lt;/code>&lt;/td> &lt;td class="yes">yes&lt;/td> &lt;td class="no">no&lt;/td> &lt;td class="yes">yes&lt;/td> &lt;td class="yes">yes&lt;/td> &lt;td class="yes">yes&lt;/td> &lt;/tr>
&lt;tr>&lt;td>Array like&lt;/td> &lt;td class="code">p := @str[1]&lt;/span>&lt;/td> &lt;td class="yes">yes&lt;/td> &lt;td class="yesno">without $R&lt;/td>&lt;td class="no">no&lt;/td> &lt;td class="no">no&lt;/td> &lt;td class="no">no&lt;/td> &lt;/tr>
&lt;tr>&lt;td>Indirect&lt;/td> &lt;td>&lt;code>p := pchar(pointer(str))&lt;/code>&lt;/td> &lt;td class="yes">yes&lt;/td>&lt;td class="yes">yes&lt;/td> &lt;td class="no">no&lt;/td> &lt;td class="yes">yes&lt;/td> &lt;td class="yes">yes&lt;/td> &lt;/tr>
&lt;/tbody>
&lt;/table>

&lt;p>
The meaning of the columns is:
&lt;ul>
&lt;li>No copy: None of the methods above copies the content of the string.&lt;/li>
&lt;li>Branch free: yes, iff the conversion works without branching instructions (hidden ifs). Branching is always very slow and  even if modern computers are fast enough that it usually does not matter, you sometimes have/want to make something as fast as possible.  &lt;/li>
&lt;li>Nil aware: yes, if it works if str=nil. &lt;/li>
&lt;li>Range safe: no, iff the conversion can fail if you enable range checking with the $R+ or -Cr option. &lt;br> &lt;code>@str[1]&lt;/code> will raise a range checking error if the string is empty, because s[1] doesn't exist then. &lt;/li>
&lt;li>$H- safe: no, if it also compiles with shortstrings. This section is only about conversion of ansistrings to pchars and none of the methods supports shortstrings. However, sometimes you forget to enable the $H+ option and every string becomes a shortstring.  If you then use @str[1], it can randomly crash, because shortstrings are not null-terminated. The other two methods are safe, because they will not compile.&lt;/li>
&lt;/ul>

&lt;p>
So you should never use @str[1] to convert it to a pchar, and pchar(pointer(str)) only if you understand what nil aware means. &lt;br>
It is said that every ansistring is null-terminated, but this is not exactly true. There is one (and only one!) case in which a ansistring str is not null-terminated: If str is empty (&lt;code>str = ''&lt;/code>). Then str is nil.&lt;br>
&lt;code>pchar(str)&lt;/code> will detect this case and returns a pointer to a global #0 character, but &lt;code>pchar(pointer(str))&lt;/code> will return nil. So &lt;i>you can always use &lt;code>pchar(str)&lt;/code>, and &lt;code>pchar(pointer(str))&lt;/code> only if your string is not empty&lt;/i> and you can prove this.&lt;br>
(and as a remark: if you ever get a string which is not '' and not null-terminated, you probably forget to enable $H+ or - less probably - something wrote to a wrong pointer. )

&lt;p>
So why should you not always use &lt;code>pchar(str)&lt;/code>? &lt;br>
Because it is much slower than the two other methods, since &lt;code>pchar(str)&lt;/code> checks for the nil-case, and this is often unnecessary.&lt;br>
&lt;p>Some people also say &lt;code>pchar(str)&lt;/code> calls &lt;code>UniqueString&lt;/code> to reset the reference count of the string, but this is wrong. &lt;code>pchar(str)&lt;/code> does not call any function.

To see how worse the check is, you have to look at the assembly of the program (generated with fpc2.4 on amd64, not affected by optimization levels (which is strange because the assignment to rax was duplicated)):

&lt;p>
&lt;code>pchar(str):&lt;/code>
&lt;pre>
1    mov    rax,QWORD PTR &lt;i>string variable&lt;/i>
2    test   rax,rax
3    jne    &lt;i>to 5&lt;/i>
4    mov    rax, &lt;i>global #0 address&lt;/i>
5    mov    QWORD PTR &lt;i>pchar variable&lt;/i>,rax
&lt;/pre>

&lt;code>p := pchar(pointer(str))&lt;/code> or &lt;code>p := @str[1]&lt;/code> with $R-:

&lt;pre>
1    mov    rax,QWORD PTR &lt;i>string variable&lt;/i>
2    mov    QWORD PTR &lt;i>pchar variable&lt;/i>,rax
&lt;/pre>

So the check requires three additional instructions, and one is a jump instruction which will be executed iff the string is not empty.

Benchmarking (100000000 * 8 times repeated) results in:
&lt;table style="text-align:center; margin-left:auto;margin-right:auto">
&lt;tr>&lt;td class="invisible">&lt;/td>&lt;td colspan=2>non-empty string&lt;/td>&lt;td colspan=2>empty string&lt;/td>&lt;/tr>
&lt;tr>&lt;td class="invisible">&lt;/td>&lt;td>$R-&lt;/td>&lt;td>$R+&lt;/td>&lt;td>$R-&lt;/td>&lt;td>$R+&lt;/td>&lt;/tr>
&lt;tr>&lt;td style="text-align:left">pchar(str)&lt;/td>&lt;td colspan=2>894 ms&lt;/td>&lt;td colspan=2>496 ms&lt;/td>&lt;/tr>
&lt;tr>&lt;td style="text-align:left">pchar(pointer(str))&lt;/td>&lt;td colspan=2>325 ms&lt;/td>&lt;td colspan=2>325 ms, but wrong result&lt;/td>&lt;/tr>
&lt;tr>&lt;td style="text-align:left">@str[1]&lt;/td>&lt;td>325 ms&lt;/td>&lt;td colspan>4616 ms&lt;/td>&lt;td>325 ms, but wrong result&lt;/td>&lt;td>crash&lt;/td>&lt;/td>&lt;/tr>
&lt;/table>
&lt;p>
This shows &lt;code>pchar(pointer(str))&lt;/code> is more than twice as fast than &lt;code>pchar(str)&lt;/code> in the more common use case of non-empty strings.

&lt;p>
And for completeness, also the &lt;code>$R+ @s[1]&lt;/code> assembly:
&lt;pre>
1    mov    rbx, &lt;i>string variable&lt;/i>
2    mov    rdi,rbx
3    call   0x421668 &amp;lt;fpc_ansistr_checkzero&amp;gt;
4    mov    rsi,0x1
5    mov    rdi, &lt;i>string variable&lt;/i>
6    call   0x421680 &amp;lt;fpc_ansistr_checkrange&amp;gt;
7    mov    &lt;i>pchar variable&lt;/i>,rbx
&lt;/pre>

In all cases is possible to modify the resulting pchar, but if you do that you will modify all copies of the string (unless you call UniqueString before): 

&lt;pre>
var s,t:string;
    p:pchar;
begin
    s:='Hallo'; 
    t:=s;
    p:=pchar(s); 
    p^:='h';
    assert(s='hallo');
    assert(t='hallo');
end.
&lt;/pre>

So only modify the pchar of an converted string if you created that string or have modified it before with string functions (so reference count = 1). 
</text>
        </new>
	<new date="20. Aug 2010">
          <text language="de">Langsam sterben alle Seite weg, die ich im Internet kenne. Heute habe ich gemerkt, dass regexpstudio.com mit der TRegExpr-Klasse verschwunden ist, die früher als bester Delphi regexp-Parser galt. (die alten Delphiforen, in denen sie bewundert wurde, finde ich auch nicht mehr...) &lt;br> Da man die Klasse für meine Internettools braucht, gibt es hier jetzt einen &lt;a href="sources_de.html#regexpr">TRegExpr-Mirror&lt;/a>.</text>
          <text language="en"> I just noticed that Andrey V. Sorokin's site regexpstudio.com does not exist anymore. His class TRegExpr was the best regular expression parser for Delphi and FPC. Because you need this class to use my internet tools, I  created a &lt;a href="sources_en.html#regexpr">mirror of TRegExpr&lt;/a>.</text>
        </new>
	<new date="10. Aug 2010">
          <text language="de"> Und weiter geht es mit den SIRDSlets: Es gibt jetzt drei neue Level, Übersetzungen, Beschleuniger und Anaglyphenrendering. Die Beschleuniger sind wie schwarze Löcher, aber unabhängig von der Schiffsposition. Mit dem Anaglyphenrendering kann man es nun auch dreidimensional sehen, wenn man nicht schielen kann. Damit ist allerdings verwirrender, da die meisten 3D-Brillen eine miserabel Kanaltrennung haben. &lt;br>Und falls es jemand noch nicht mitgekriegt hat: Deolalikar hat einen Beweis für P!=NP mit graphischen Modellen, FO(LFP)-Logik und theoretischer Physik veröffentlicht. Wenn der Beweis stimmt, wurden drei der berühmtesten Probleme in nur fünfzehn Jahren gelöst, mal sehen, wann Riemann drankommt.</text>
          <text language="en"> A Sirdslets update is there: 3 new levels, translations, accelerators and anaglyph rendering. The accelerators are like black holes, but independent of the ship position. The anaglyph rendering creates red/cyan images which you can see with 3d glasses. But they are a little bit confusing because most 3d glasses have a very bad channel separation and you will see everything three times. &lt;br> And if you are interested in theoretical computer science and did not get the news: Deolalikar claims to have found a proof for P!=NP using a combination of graphical models, FO(LFP) logic and theoretical physics. If he is right, the third of the most famous problems is solved in just fifteen years (after Fermat and Poincaré), perhaps Riemann is going to be the next one. </text>
        </new>
	<new date="28. May 2010">
          <text language="de">  Heute habe ich mein neues &lt;a href="games_de.html#sirdslets">SIRDSlets Spiel&lt;/a> hochgeladen, dass eines der wenigen Spiele ist, die man in echtem 3D spielen/sehen kann. Es ist außerdem das erste Browserspiel auf dieser Seite und muss nicht wie die anderen explizit heruntergeladen werden. Allerdings ist es noch nicht ganz fertig, aber es ist schon seit Monaten spielbar und ich habe im Moment zu wenig Zeit, es zu vollenden. So fehlt zum Beispiel eine deutsche Übersetzung, mehr als sechs Level, und der Hardware-beschleunigte SIRDS-Renderer aus der vorherigen News (wobei es aber zweifelhaft ist, ob ich den jemals einbaue, da der Softwarerenderer schnell genug zu sein scheint, und es Applets nicht  leicht fällt OpenGL zu verwenden).</text>
          <text language="en"> Today I uploaded my new &lt;a href="games_en.html#sirdslets">SIRDSlets game&lt;/a> which is one of the few games that you can play/see in real 3d without additional 3d glasses. It is also the first online game on this page, so you can play it without downloading it explicitely. However, although it is playable, it is not completely finished, but it is in that state since months and I don't have much time in the moment. Some things that are missing are additional levels and the opengl renderer from the last news, so it only has six levels that are software rendered.   </text>
        </new>
          <new date="16. Feb 2010"><text language="de">
          Heute gibt es abermals ein &lt;a href="tools_de.html#videlibri">Videlibri-Update&lt;/a>, das die unten erwähnten Probleme mit der  FHB Düsseldorf und den beiden Aachener Bibliotheken löst. Außerdem läuft es jetzt wieder unter Windows (und weiterhin unter Linux).&lt;br>
          Dazu habe ich auch meine  &lt;a href="sources_de.html#internettools">Internettools&lt;/a> aktualisiert: Der Wininet-Wrapper unterstützt nun auch Cookies ohne Attribute und http-Verbindungen über andere Ports als 80. Außerdem gibt es ein globales Logging (was man insbesondere für https braucht). Die Parserklasse ist ebenfalls flexibler geworden und man kann in den Pseudo-XPath-Ausdrücken nun auch Regex-Filter vor dem Ausführen anderer Funktionen anwenden, statt nur nachträglich wie bisher. (echte XPath-Ausdrücke können es dagegen übrigens gar nicht)&lt;br>
          Zudem habe ich ein paar News ins Archiv und einige unfertige Tools auf die Demoseite verschoben. 
          </text><text language="en">
          There is a new update of my &lt;a href="sources_en.html#internettools">Internettools&lt;/a>: It fixes two small bugs that prevented the receiving of cookies without attributes and the creation of http connections over the 8080 port. It also add a global logging which is especially useful for debugging https.  In the  parser class the pseudo-XPath-expressions can now extract regex-matching data during the evaluation of the expression instead only afterwards like before. (real XPath-expressions does not support it at all) &lt;br>
         Furthermore, some news have been moved in the archive and some uncompleted tools on the demo page.
          </text></new>
          <new date="07. Feb 2010"><text language="de">
          Ab jetzt gibt es eine extra &lt;a href="demos_de.html">Demo-Unterseite&lt;/a> für kleine Programme, die eigentlich nutzlos sind, aber interessante Techniken oder hübsche Filme zeigen. Dazu habe ich zum einen ein paar Programme verschoben, zum anderen gibt es zwei neue, die ich an der Uni aus den Übungsprogrammen der VR- und Computergrafikvorlesungen programmiert habe. &lt;br>
          Beide zeigen eine echte 3D-Darstellung, das eine rendert hardware beschleunigte &lt;a href="demos_de.html#sirdsgl">Single Image (Random Dot) Stereograms&lt;/a>, also Bilder, in denen man ein 3D-Bild durch Schielen sehen kann. Das andere &lt;a href="demos_de.html#webcamucp">"Webcam-UCP"&lt;/a> Programm verwendet die klassische rot/cyan-Trennung, um Bilder für 3D-Brillen zu erstellen. Zusätzlich wird aber mittels einer Webcam, die Brillenposition getrackt und die Szene betrachterzentriert gerendert.&lt;br>
          Außerdem funktioniert in Videlibri jetzt wieder die StB Aachen (FHB Düsseldorf vermutlich auch), ich lade die neue Version aber erst hoch, wenn ich die FHB noch getestet habe, da es ja sowieso niemand nutzt.
          </text><text language="en">
          There is now a new &lt;a href="demos_en.html">demo page&lt;/a> listing small program which are useless but demonstrate interesting techniques or show nice films. &lt;br>
          Aside from some recategorizated old programs, there are two new ones on this page, both based on lecture exercises and rendering real 3d. The first draws hardware accelerated &lt;a href="demos_en.html#sirdsgl">Single Image (Random Dot) Stereograms&lt;/a>. SIRDS are flat pictures containing a 3d scene which you can only see by squinting.  The other &lt;a href="demos_en.html#webcamucp">"Webcam-UCP"&lt;/a> program creates  traditional red/cyan anaglyphs. Furthermore it tracks the position of the 3d glasses via a webcam and renders the scene in user centered projection.&lt;br>
          </text></new>
          <new date="27. Jan 2010"><text language="de">
          Von VideLibri gibt es nun eine neue Version, die auch die Hochschulbibliothekk der RWTH Aachen unterstützt und vollständig Linux-kompatible ist, inklusive Menüeinträge und integrierte Autostartkonfiguration.  &lt;br>
          Nun die schlechten Nachrichten: Bei der BTH Aachen gibt es noch keine integrierte Verlängerung, da man nicht gleich nach einer  Ausleihe verlängern darf, und ich somit weiß  nicht feststellen kann, wie es funktioniert. Außerden haben alle Libero-Büchereien mal wieder eine neue Software installiert. Das heißt:&lt;br>
          Sowohl die Aachener Stadtbibliothek wie auch die FHB Düsseldorf gehen vermutlich nicht mehr. Testen kann ich es nicht, weil ich momentan nicht in die Bibliothek kann. (und genau DAS ist der Grund, warum mal endlich jemand die Software benutzen sollte. Wenn mich jemand darauf hinweist und die neue Seite per Mail schickt, kann ich solche Fehler nämlich in einer Viertelstunde beseitigen, statt in zwei Wochen!)   &lt;br>
          Zumindest in der alten Windowsversion funktionieren die beiden definitiv nicht (Stb Aachen war da nie drin und die FHB ist umgezogen). Sollten sie in der Linuxversion funktionieren,  kann man aber einfach die Dateien der Linuxversion in das Installationverzeichnis in Windows kopieren, dann läuft es dort genauso gut/schlecht. &lt;br> 
          Zudem habe ich die FHB Bochum gestrichen, da sie nicht mehr unter ihrer alten Internetadresse zu finden ist, ich die neue nirgends finden kann und sie sowieso nur im Programm war, weil sie einen gemeinsamen Server mit der FHB Düsseldorf hatte.&lt;br>
         
          </text></new>
          <new date="06. Jan 2010"><text language="de">
          So jetzt gibt es eine neue Version von allen in der letzten News erwähnten Paketen, hauptsächlich, weil ich vergessen hatte, die Unittest auszuschalten. Beim TreeListView gab es noch einige andere Änderungen: Beim horizontalen Scrollen flackert es nicht mehr unter GTK (früher hat es das auch nicht, aber bei der Änderung letzter Woche gab es wohl irgendwelche Kompatibilitätsprobleme) und die Icons im Baum werden nun geclippt, wenn die Spalte zu klein ist. &lt;br>
          Außerdem gibt es jetzt eine neue Version von meinem Büchereiverwaltungsprogramm &lt;a href="tools_de.html#videlibri">Videlibri&lt;/a> (das übrigens auf allen diesen anderen Paketen basiert). Zur Abwechslung setzt es diesmal nicht Windows sondern Debian 64-Bit voraus und kann auch die Bücher der Aachener Stadtbibliothek verwalten. Die Windowsversion kommt später, wenn ich sichergestellt habe, dass das Crosscompiling zuverlässig funktioniert. Das Programm verwendet allerdings immer noch ein Windowsverzeichnislayout (alle Dateien in einem Programmordner statt wie unter Linux üblich überall verstreut) und der Autostart muss manuell unter der gnome/KDE-Konfiguration eingetragen werden (videlibri-Pfad mit --autostart als Parameter), wenn man die Autostartfunktionalität benutzen will. 
          </text><text language="en">
          There are some minor changes in all the packets below, mostly I forgot to disable the unittests (and you probably don't want to have test log results everywhere). And the TreeListView won't flicker anymore on gtk when you scroll horizontally (I'm pretty sure that it also didn't flicker when I uploaded the last version...) and icons in the item tree will be clipped if the column is too short.
          </text></new>
	  <new date="31. Dec 2009"><text language="de">
           Und weiter geht's. Ich habe jetzt drei der bisherigen Packages mit HTML-Templateparser, Autoupdate und Wininetwrapper zu einem  &lt;a href="sources_de.html#internettools">Internet Tools&lt;/a>-Package zusammengefügt und platform-unabhängig gemacht (der Hauptunterschied ist, dass der Wininetwrapper nun auch Synapse unterstützt). Das Package benötigt/enthält auch meine &lt;a href="sources_de.html#bbutils">bbutils&lt;/a>, bei denen ich noch einen Absturz unter 64-Bit beseitigt habe (und vermutlich seit dem letzten Release auch einige Funktionen umbenannt). &lt;br>  
           Außerdem gibt es jetzt für alle der geänderten Pascalkomponenten eine &lt;a href="documentation/">Onlinedokumentation&lt;/a>, für die ich einfach nur die sowieso in den zip-Dateien vorhandenen pasdoc-Dateien unkomprimiert hochgeladen habe.
          </text><text language="en">
           And more updates: I merged the three packages with the template based html parser, the auto update and my Wininetwrapper into an  &lt;a href="sources_en.html#internettools">Internet Tools&lt;/a>-Package and made them platform-independent. (the main change is that the wininet wrapper is now also a Synapse wrapper). This new package requires/contains now my &lt;a href="sources_en.html#bbutils">bbutils&lt;/a> in which I fixed a crash on 64-Bit.  (and probably renamed some functions since the last published version). &lt;br>  
           Furthermore I uploaded the pasdoc documentation from every (changed so far) package as &lt;a href="documentation/">online documentation&lt;/a> and  every  archive  has now  a common structure. The root level of the zip contains a single directory named like the zip itself, which contains the data files, the changelog from Mercurial and, if available, the pasdoc documentation for that archive.
          </text></new>
	  <new date="28. Dec 2009"><text language="de">
		So nun bin ich von Windows 32-Bit auf Linux 64-Bit gewechselt, und jetzt geht das große Updaten los. Die alten Programme dieser Seite waren zwar theoretisch schon alle platform-unabhängig, praktisch gab es aber noch einige Macken.&lt;br>
		Mein &lt;a href="components_de.html#treelistview">TreeListView&lt;/a> läuft in der neuen Version unter LCL-GTK sehr viel schneller/flüssiger als früher, da mehrere Benutzereingaben hintereinander zusammengefasst angezeigt werden (wobei es eigentlich ein gemeldeter LCL-Bug ist, dass so viele  überflüssige  Nachrichten überhaupt weitergeleitet werden), außerdem kann jetzt in jedem Item ein Datenwert mit 64-Bit gespeichert werden und die Komponente steht in einem Designzeitpackage zur Verfügung. Die dazugehörige &lt;a href="components_de.html#searchbar">Suchleiste&lt;/a> passt sich nun der Schriftgröße an und hat ebenfalls ein Package bekommen. Zudem kann mein  &lt;a href="tools_de.html#jaxmlp">JAXML-Parser&lt;/a> jetzt auch Dateien mit unterschiedlichen Zeichensätzen erstellen und die \\-Form funktioniert wieder richtig.
	  </text><text language="en">
	      So now I switched from Windows 32 bit to Linux 64 bit and need to update all the programs here which were theoretically platform-independent, but apparently didn't really work there.&lt;br>
The  &lt;a href="components_en.html#treelistview">TreeListView&lt;/a> is now a lot faster in LCL-GTK, because it will cache subsequent input events and draw all changes at once (actually it is a reported lcl bug that there are so many unnecessary events, but joining them is better anyways), and  in every item you can now store a 64 bit value instead of a 32-bit value like before. I also changed the included &lt;a href="components_en.html#searchbar">SearchBar&lt;/a> to set its size dependent on the currently used font. For both these components I created a Delphi and a Lazarus package, so you can place them on the form during the design time.  Furthermore my  &lt;a href="tools_en.html#jaxmlp">JAXML parser&lt;/a> can now create files in different encodings and  \\-escaping works again (it seems I forgot to actually run the unit tests on the last release). 
	  </text></new>
	  <new date="05. Okt 2009"><text language="de">
		Ich habe jetzt mal meine &lt;a href="others_de.html#bachelor">Bachelorarbeit&lt;/a> hochgeladen. Im Wesentlichen geht es darum, wie man aus mehreren gegebenen, sortierten Listen von gleichen Ereignissen herausfinden kann, welches dieselben sind. 
	  </text></new>
	  <new date="16. Sep 2009"><text language="de">
		Diese Woche habe ich meine Bachelorarbeit/prüfung abgelegt , so dass ich mich wieder etwas um meine Homepage kümmern kann. &lt;br>
		Heute gibt es ein neues Java-Script, mit dem man das &lt;a href="others_de.html#gaussElimination">gaußsche Eliminationsverfahren&lt;/a> auf eine Matrix anwenden kann. Es gibt zwar schon hunderte solche Programme im Internet, aber alle, die ich finden konnte, waren für mein Gleichungssystem unbrauchbar, da sie verlangen, dass die Matrix quadratisch ist und Elemente eines Körpers statt eines Ringes enthält.&lt;br>  Übrigens ist interessante Tatsache, die ich bei der Implementierung festgestellt habe, dass man den euklidischen Algorithmus zur ggT-Berechnung als Spezialfall des gaußschen Eliminationsverfahren auf einer 2x1-Matrix der natürlichen Zahlen betrachten kann.
	  </text><text language="en">
		This week I finished and presented my bachelor thesis, so that I have now enough time to update this home page. &lt;br>
		Today I added a java script that you can use to perform a &lt;a href="others_en.html#gaussElimination">Gaussian Elimination&lt;/a> on a given matrix. Of course, there are already hundreds of such scripts online, but all of those I found, didn't work for the equations I wanted to solve, because they assumed that the matrix is quadratic and contains elements of a field instead of a ring. And most of them don't let you choose the order in which the operations are performed or allow neither import nor export of data. The only problem with my script is that java script is always a little bit slow, but anyways you don't  solve  equations with dozen variables step-by-step. And it seems that no one  downloads anything in the web2.0 era.&lt;br>
		An interesting fact I noticed while implementing this is that you can consider the Euclidean algorithm for finding the gcd as a special case of the Gaussian Elimination on a 2x1-matrix of integers.
	  </text></new>
	  <new date="15. Apr 2009"><text language="de">
	     Es gibt nun wieder ein neues Programm: Einen &lt;a href="tools_de.html#sunsimulator">Sonnensimulator&lt;/a>, der die Helligkeit und den Farbton des Monitors zeitlich ändert, so dass dessen Licht dem Sonnenlicht entspricht.&lt;br>
		 Außerdem habe ich dafür eine &lt;a href="sources_de.html#diagram">Diagrammkomponente&lt;/a> geschrieben, die Gleitkommazahlen-Reihen unterschiedlich darstellen kann. Sie benutzt ein Model/View-System (da ich mich viel mit QT beschäftig habe), das im ersten Moment ziemlich verblüffend wirkt. Z.B.: Kann man in zwei unterschiedlichen Fenstern immer dieselben Punkte synchronisiert anzeigen und in einem noch eine weitere Reihe hinzufügen.
      </text><text language="en">
	     There is now a new program: &lt;a href="tools_en.html#sunsimulator">Sun-Simulator&lt;/a> which changes the brightness and shade of color of the monitor during the day and year, so that its light matches the sunlight.&lt;br>
		 Additional I wrote a &lt;a href="sources_en.html#diagram">diagram component&lt;/a> for Lazarus which shows float points in multiple ways. It is based on a model/view system (because I use qt a lot at the moment) which can be used to create interesting effects very easily. E.g.: you can synchronize the data points across different windows and add some other points in one of them at the same time.
      </text></new>    
	  <new date="09. Apr 2009"><text language="de">
	     Ein Problem, wenn man Opensource-Software schreibt ist, dass man häufig Patches erhält, die ziemlich unbrauchbar sind, weil sie zu 95% aus Whitspaceänderungen bestehen. Daher habe ich ein (unter Linux und Windows laufendes) &lt;a href="tools_de.html#simplifydiff">Kommandozeilentool namens Simplifydiff&lt;/a> geschrieben, welches alle unnötigen Daten entfernt.&lt;br>
         Außerdem werden ab jetzt alle Gästebucheintrag, welche von der Heuristik als Spam erkannt werden &lt;em>ohne Backup&lt;/em> gelöscht. Bisher habe ich zur Sicherheit immer noch eine Kopie per Mail erhalten, aber da unter den letzten tausend Einträgen sowieso kein echter Beitrag war, ist das wohl unnötig. (Ebenfalls unnötig sind übrigens die Spameinträge, das Gästebuch hat nämlich schon immer noindex, nofollow gesetzt!)
      </text><text language="en">
	     A problem with writing open-source software is that you often receive patches which are completely useless, because they consists to 95 percent of changed whitespace. Therefore I wrote the command line tool &lt;a href="tools_en.html#simplifydiff">Simplifydiff&lt;/a> that removes all unnecessary data.&lt;br>
         And all entries in the guestbook which are spam according to the heuristic are now removed &lt;em>without a backup&lt;/em>. So far  I received a copy as mail, but since the last thousand entries were really spam, this seems to be useless.  (Actually the spam entries are also completely useless, because the guestbook has set the flags noindex, nofollow since the beginning!)
      </text></new>    
      <new date="01. Mar 2009"><text language="de">
         Vor einiger Zeit habe ich angefangen Texte und ein Buch mit LaTeX zu schreiben und habe dafür den Editor Texmaker genommen, da es der einzige platform-unabhängige, open-source Editor war, den ich finde konnte. Da der einige Fehler enthält, habe ich in einige kleine Patch erstellt, die dann immer größer wurden, bis sie schließlich zu dem Fork &lt;a href="http://texmakerx.sourceforge.net">TexMakerX&lt;/a> (auf Sourceforge) geführt haben. Zu den wichtigsten Feature, die ich hinzugefügt habe, gehört interaktive Rechtschreibprüfung, Codefaltung und eine Textanalyse.&lt;br>
         Auf dieser Seite hier habe ich dagegen nur den Übersichtstext unten mal wieder aktualisiert und, dank eines Versionskontrollsystems, das Datum der Newsnachricht vor dieser richtig gestellt. (da stand nämlich noch 18. Okt) (Korrektur: Das VCS lag falsch, aber glücklicherweise hatte ich noch mein CMS)
      </text><text language="en">
        Some time ago I started to write texts and even a book in LaTeX. Therefore I searched a platform-independent, open-source editor, and found only Texmaker. &lt;br>
        But since he has some bugs, I created some small patches, which got bigger and bigger, until they finally lead to the fork &lt;a href="http://texmakerx.sourceforge.net">TexMakerX&lt;/a> (on Sourceforge). The most important features I added are, interactive spell checking, code folding and a text analysis.&lt;br>
         On this web page I only updated the overview text below and corrected the date of the last news from 18.Okt to 27.Nov. (version control systems are really useful...) (correction: The date of the VCS was wrong, but my CMS got it right).
      </text></new>    
  </news>
  <final-content>&lt;br>&lt;br>&lt;h2>Übersicht&lt;/h2>
  &lt;br>
  Auf dieser Seite kann man einige von mir programmierte Spiele und Tools herunterladen. &lt;br>
  Zudem gibt es nützliche Quellcodes und Komponenten, vorwiegend für Delphi und FreePascal. &lt;br>
  &lt;br>
  Ein paar Informationen über mich: Ich programmiere, seit ich zwölf bin (weshalb viele der Downloads auf dieser Seite sehr alt sind), mittlerweile bin ich 20 und studiere Informatik an der Heinrich-Heine-Universität Düsseldorf.(Stand 2009)&lt;br>
  Ich habe mehrmals am Bundeswettbewerb Informatik teilgenommen, wo ich Preisträger und Bundessieger wurde, außerdem war ich im deutschen Team bei mehreren internationalen Informatikolympiaden (auch bei &lt;em>der&lt;/em> International Olympiad of Informatics)  und habe dort (leider nicht bei der) auch einige Medaillen gewonnen.&lt;br>
  &lt;br>
Es wäre schön, wenn ihr ins &lt;a href="koobtseug_de.php">Gästebuch&lt;/a> schreibt wie euch diese Seite und die Programme hier gefallen haben. Bei sonstigen Fragen könnte ihr mir auch gerne &lt;a href="impressum_de.html#top">eine Mail&lt;/a> schreiben.
&lt;div style="text-align:center; margin-top: 2em;">
  &lt;img src="img/maus.gif" alt="Maus mit Käse"width="182" height="132">
&lt;/div>
</final-content>
<final-content language="en">&lt;br>
&lt;h2>Overview&lt;/h2>
  &lt;br>
  On this page you can download some games and tools I wrote. &lt;br>
  There are also useful sources and components, mainly for Delphi and Free Pascal. &lt;br>
  &lt;br>
  Some information about me: I have programmed since I was twelve (that's why there are so many old downloads here), now I am 19 and study computer science at the Heinrich-Heine-Universität Düsseldorf. (2009)&lt;br>
  I won several prices in the German national informatics competition and participated in different European and International Olympiads of Informatics. In the European ones I also won some medals. &lt;br>
  &lt;br>
Here is a &lt;a href="koobtseug_en.php">guestbook&lt;/a> where you can tell me if you like or dislike something on this page. If you have any questions or suggestions you can also write me &lt;a href="impressum_en.html#top">a mail&lt;/a>.

&lt;div style="text-align:center; margin-top: 2em;">
  &lt;img src="img/maus.gif" alt="mousing eating cheese"width="182" height="132">
&lt;/div>
&lt;br>&lt;br>&lt;br>&lt;br></final-content>
</file>
