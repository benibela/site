<file>
  <description language="de">BeniBela online ist eine Seite über die Programmierung mit Delphi, und eine Downloadseite für Tools und Spiele.</description>
  <description language="en">BeniBela online is a site about the programming with Delphi, and it is also a download page for tools and games.</description>
  <keywords language="de">BeniBela, Benito van der Zander, Spiele, Tools, Delphi, Komponenten, Scherzprogramme</keywords>
  <keywords language="en">BeniBela, Benito van der Zander, games, tools, Delphi, components, joke programs</keywords>
  <prevent-content-title>YES</prevent-content-title>
  <content><a auto="*rss"/> <h2 style="display: inline">News</h2>  <br/></content>
    
    <news>
<!--
    <new date="2017-10-13"> 
    <text language="de"></text>
    <text language="en"></text>
    </new>
-->    
    <new date="2017-03-26"> 
    <text language="de">
    <p>Zur Abwechslung gibt es diesmal ein Update der <a auto="internettools"/>, das nicht XQuery betrifft: <br/>
    Heruntergeladene Daten werden durch eine Callback-Funktion zurückgeliefert, so dass man sie direkt in den Zielbuffer schreiben kann. Damit kann man unbegrenzt viel herunterladen, ohne dass der Arbeitsspeicher ausgehen könnte, und auch sonst war es in manchen Fällen 30% schneller.  <br/>Die verschiedenen URL-Encodingfunktionen <code>TInternetAccess.urlEncodeData</code>, <code>xquery.urlHexEncode</code>, <code>bbutils.strEscapeToHex</code>  sind vereinheitlicht und <code>TInternetAccess.urlEncodeData</code> folgt standardmäßig html5. <br/>Cookies werden nach RFC 6265 verarbeitet und nur an den Server gesendet, der sie gesetzt hat. Da gibt es erstaunlich viele Büchereien die einen externen Login-Server verwenden, der die Cookies der Bibliothek löscht, wenn er darauf Zugriff bekommt. </p>
    </text>
    <text language="en"><p>Time for an update of the <a auto="internettools"/> that does not involve XQuery: <br/>
    Downloaded data is now returned through a callback function, so it can be written directly in the destination buffer without copying, no matter if the destination is a string, stream or file.<br/>
    The various url/hex encoding functions <code>TInternetAccess.urlEncodeData</code>, <code>xquery.urlHexEncode</code>, <code>bbutils.strEscapeToHex</code> are merged and the default escaping mode follows html5.<br/>
    The cookie handling is updated to RFC 6265 and the cookie origin rules are actually enforced, i.e. a cookie set by one server will not be send to another server</p>
    </text>
    </new>

    <new date="2017-01-29"> 
    <text language="de">
    <p>Nun gibt es <a auto="videlibri"/> schon seit 10 Jahren: 4183 Commits, 88 Tausend Zeilen Code<sup>256 kLOC mit Testfällen, etc. nach Open Hub</sup>, 30 000 Testfälle, 18 Bibliothekssystems/APIs, verwendet von hunderten Bibliotheken. Eine erstaunliche Zeitverschwendung.</p>
    <p>Zudem habe ich ein neues <a href="//hg.benibela.de/mailfilter">Mailsortierungssystem</a>. </p>
    </text>
    <text language="en"><p>I have a new way of <a href="//hg.benibela.de/mailfilter">sorting my mails</a>. </p>
    <p>It is the ten year anniversary of <a auto="videlibri"/>: 4183 commits, 88 kLOC<sup>256 kLOC when counting test cases, etc., says Open Hub</sup>, 30 000 test cases, 18 different supported library sytems/APIs used by at least hundreds of libraries. And yet there is still no English translation.</p>
    <p>And to whoever owns 91.200.12.0: can you please stop posting 1000 spam entries to my guestbook every day? They are being auto blocked anyways. 30375 blocked comments this year.</p>
    </text>
    </new>


    <new date="2016-12-03"> 
    <text language="de">Viel zu wenig Leute kennen alle XPath/XQuery-Funktionen, daher habe ich eine Liste aller in Xidel/Internet Tools <a href="/documentation/internettools/xpath-functions.html">implementierten Funktionen</a> zusammengestellt. Die Funktionen können auch in VideLibri verwendet werden, allerdings ist die Liste für das nicht vollständig, da VideLibri zusätzliche Funktionen definiert.  </text>
    <text language="en">It seem people have a hard time knowing, which functions they can use in Xidel / Internet Tools, even thought most are described in the XPath/XQuery, EXPath or JSONiq standards. Therefore I have assembled a complete list of <a href="/documentation/internettools/xpath-functions.html">all implemented functions</a>. </text>
    </new>
    
    <new date="2016-11-25"> 
    <text language="de">Die neue Version meines <a auto="internettools">XQuery interpreter</a> ist nun weitaus schneller. Die Optimierungen lassen sich in drei Aspekte einteilen: <ul>
    <li>Einige Berechnungen, die während der Evaluationsphase durchgeführt werden, aber nicht von den Eingabedaten abhängen, wurden in die Parsingphase verschoben.</li>
    <li>Ein verbessertes Speichermanagement, beinahe einen Garbage-Collector, bei dem wiederholte Allokationen vermieden werden. </li>
    <li>Das Entfernen von impliziten FPC-Funktionsaufrufen. Zum Beispiel benötigt die automatische Speicherfreigabe von Interfaces/Arrays/Strings in FreePascal einen Referenzzähler, der einen impliziten Exceptionblock braucht, um Exception-safe zu sein, was wiederum einen long jump braucht, der in valgrind dann die Hälfte der ausgeführten Instruktionen ausmacht...</li></ul><br/>
    Desweiteren habe ich einen ausführlichen Vergleich der existierenden <a href="fpc-map-benchmark_en.html">FreePascal Hash Maps</a> erstellt. Die Hälfte der Maps in der Standardbibliothek wirkt unbenutzbar ineffizient. RTL Generics.Collection funktioniert theoretisch am besten, hat jedoch noch einige offene Compilerbugs, selbst in fpc trunk. <code>contnrs.TFPHashList</code> ist zwar schnell, verwendet aber leider <code>shortstring</code>, so dass es eine maximale Schlüssellänge von 255-Zeichen hat...
    </text>
    <text language="en">I have made my <a auto="internettools">XQuery interpreter</a> much faster, after profiling it several times over the XQuery Test Suite. Some key improvements are:
    <ul><li>The query is fully parsed before being evaluated. Previously some parts were left as string and only parsed during evaluation, e.g. axes names. Although this change makes it of course slower when running many queries with untaken branches. </li>
        <li>Some specific query rewriting, e.g.: <code>a and b</code> to <code>if (a) then boolean(b) else false()</code>. In XPath conditionally filtering and index access of a sequence are the same, so there always has been a query optimizer to detect constant filters. But I had not marked <code>last()</code> as constant, so it was evaluated for every element. Marking it as constant was the biggest speed-up, O(n), although it only affects queries using <code>last()</code> on sequences with tenthousands of values. </li>
        <li>Local variables are no longer accessed by name but by their stack position. Although it still pushes and compares their names for debugging, as the speed difference of that was negligible.</li>	
        <li><code>{$IMPLICITEXCEPTIONS OFF}</code> sprinkled around everything. Otherwise FreePascal surrounds every function using non-const interfaces, arrays or strings with an implicit exception block, including a <em>long jump</em>. Setting a long jump on every interpreted instructions definitely hurts performance. Unfortunately there are still places, where exceptions actually might occur and the directive is not applicable, which means either I need to stop using functions (->byte code) or stop using fpc interfaces.</li>
        <li>Avoidance of memory allocations: First temporary arrays are replaced by one big stack that only grows during the evaluation, avoiding reallocation. Secondly freed value instances are cached on each thread, so values can be created from the cache without any memory allocation. This also avoids a constructor call, which is especially helpful for interface instances, because they have two VMTs initialized by the constructor. </li>
        <li>At most places it does not use interfaces anymore, but pointers to interfaces, which is weird, because interfaces are only used here as replacement for smart pointers. For the stack and list it was also helpful to bypass the automatic ref counting, by treating the smartpointers as normal pointers and memmoving them around. Having interfaces clearly was a mistake. </li>
        <li>Node names are hashed and searched by hash, which skips most nodes that do not match the queried name without ever actually comparing the name. </li>
        <li>All namespaces URLs are cached and normalized to one specific string instance. So if a node in the correct namespace is found, it never needs to compare the namespace URLs itself, because they are the same pointer. Although I had to write my own function for <a href="http://bugs.freepascal.org/view.php?id=30777" rel="nofollow">string comparison</a>, before this had any effect.</li>
    </ul><br/>
    It also somewhat breaks backward compatibility, e.g. by replacing my old TEncoding data type with fpc 3.0's TSystemCodepage.
    <br/><br/>
    
     Another huge problem with Pascal is the lack of any well-designed collection library. When it did not had generics, everyone reimplemented collections to contain one specific type. Then it got generics and every collection was reimplemented, while keeping the old ones. Then Delphi got generics, and every collection was implemented again Delphi-compatible. At the end there are a dozen collections of which neither works well. <br/>
     Here I have compared all the available <a href="fpc-map-benchmark_en.html">hash maps</a>. </text>
    </new>
    
    <new date="2016-08-20"> 
    <text language="de">Die Webseitenstruktur hat sich leicht geändert, es gibt keine Seite "Sonstiges" mehr und stattdessen <a href="papers_de.html">Papers</a> und <a href="web-apps_de.html">Web-Applets</a>. Wer also einen Link gesetzt hatte, sollte ihn ändert.</text>
    <text language="en">I have changed the webpage structure slightly. If you had set any links to me, you might need to update them. </text>
    </new>

    <new date="2016-06-13"> 
    <text language="de">Der Interpreter in meinen <a auto="internettools"/> (und damit auch von Xidel und VideLibri) unterstützt XQuery 3 nun vollständig. Vielleicht wird es jetzt Zeit an der Performance zu arbeiten, denn der Raytracertest aus der XQTS braucht immer ewig zum Durchlaufen. Warum VideLibri einen Raytracer unterstützen muss, ist zwar auch schleierhaft, aber so ist das nun mal. </text>
    <text language="en">My <a auto="internettools"/> (and thus Xidel and VideLibri) have now a complete XPath/XQuery 3.0 implementation. It  has probably become one of the most standard conformant interpreters out there. Next goals would be performance improvements and support for html5 as well as the still preliminary XPath/XQuery 3.1 standard. Remember the survey, if it one day should <a href="http://goo.gl/forms/E8vYgpa8nP" rel="nofollow">default to 3.1 instead JSONiq</a>.  </text>
    </new>
    <new date="2016-04-20"> 
      <text language="en">
        "How do you handle JSON in the XQuery world?", was a question that just	arose on the XML mailing list and is quite relevant here. Two competing standards were made, the real XQuery 3.1 currently being specified by the W3C, and an earlier standard JSONiq, which exists in two versions, a standalone version and a JSONiq extension to XQuery 3.0. My <a auto="xidel"/> is based on the JSONiq standard, but might be updated to XQuery 3.1, when it is finished. <br/>
        
        Let <code>$object</code> be an object, <code>$objects</code> a sequence of objects, <code>$key</code> a key (which can be any value in XQuery 3.1, but is converted to a string in JSONiq or current Xidel), <code>$array</code> an object, and so on...<br/>
        
        Object values can be accessed in the following ways:
          
        <ul>
          <li>The dot operator <code>$object.key</code> is of course the most natural to access JSON object fields and familiar to every JavaScript developer. However, if you want to use it in XQuery, you encounter a problem: XQuery variables names are XML names and thus can contain dots, as in <code>let $foo.bar := 123 return $foo.bar</code>. <br/> 
          Hence this notation is neither allowed in XQuery 3.1 nor the JSONiq-XQuery-extension.<br/>
          Standalone JSONiq wants to be JavaScript-like, so it takes another approach and forbids dots in variables names, making the standard syntax legal and unambiguous. It treats <code>.</code> as a "dot operator" and allows computed keys as <code>$objects.(any expression)</code>, queries for non-alphanumeric keys like <code>$objects."special key name"</code>, or keys referenced by another variable  <code>$objects.$indirect</code>. <br/>
          The last two cases are also supported in Xidel, as they are unambiguous. A variable name cannot contain <code>"</code> or <code>$</code>, and <code>$objects.</code> cannot be a single variable, as it is not followed by an operator. <code>$objects.(any expression)</code> is not allowed, as the variable <code>$objects.</code> could be a function that is called. Other unambiguous and allowed cases are after the end of parentheses, e.g. <code>($objects).key</code> or <code>{..object constructor..}.key</code>. A long time ago, before VideLibri became XQuery compatible, I did not care about these details and just used the <code>$objects.key</code> syntax. From that time Xidel still has a legacy mode in which it checks, if a variable with name <code>$objects.key</code> exists. If it exists the expression returns the value of that variable, otherwise it searches for a variable <code>$objects</code> containing an object. But this mode is disabled in the default settings.
          </li>
          <li>The functional notation <code>$object("key")</code>: It is perhaps the most natural syntax in XQuery, you treat the object as function that you can call with a key to read the corresponding value. Therefore it is allowed in all XQuery variants, but not in standalone JSONiq.<br/>
          In XQuery 3.1 it is an error to use this notation on non-JSON types (non-functions) or sequences of multiple objects, in the JSONiq extension or Xidel it returns an empty sequence. Those two also allow <code>$objects()</code> to retrieve all keys of an object.</li>
          
          <li>A lookup operator <code>$objects?key</code>. The functional notation is not always easy to read, so the W3C has added the <code>?</code>-lookup operator to XQuery 3.1. It can be used similar JSONiq's <code>.</code> operator, allowing <code>$object?key</code> or <code>$objects?(calculated key)</code>. Latter form can query multiple objects and multiple keys as <code>($object1, $object2, ...)?("key1", "key2", ..)</code>. If the left side is omitted, the current context item is used for it. 
          You can also use <code>$objects?*</code> to get all values in the object. It is an error to use it on non-JSON types.<br/>
          I have not come around to implement this in Xidel, but later versions might support it. </li>
          
          <li>A XPath like query <code>$objects/key</code> or <code>$objects!key</code>. This was the original XPath syntax to query XML, so it seems to be a good syntax to query JSON, too. Thus I have added this syntax to Xidel, but none of the other languages support it. Like W3C's <code>?</code> it can be used for multiple queries <code>($obj1, $obj2)/(key1, key2)</code> or to retrieve all values in the object <code>$objects/*</code>. It can also recursively search for a key in all descendant objects with <code>$objects//key</code>. For compatibility with XQuery, it raises an error if used on non-JSON (non-XML).  </li>
          <li>Helper functions: All variants have a bunch of helper functions. For example JSONiq (extension/Xidel) have <code>keys($objects)</code> (or <code>jn:keys($objects)</code>) to get the keys of all objects, ignoring non-objects. They also have <code>values($objects)</code> (<code>libjn:values($objects)</code>) to get all the values. XQuery 3.1 has <code>map:keys($object)</code> for the keys, <code>map:get($object, $key)</code> to get a single value, or <code>map:size($object)</code> for the number of keys in an object. These functions raise an error for anything that is not a single object.</li>
        </ul>
        
        For arrays a similar number of notations exists. Surprisingly to JavaScript developers the first element in the array has the index 1.
        
        <ul>
          <li>The JavaScript notation <code>$array[index]</code>: This is already used in XQuery to get the element of a sequence, and an array is not a sequence. So this syntax is sadly not supported anywhere. <br/> However, standalone JSONiq has at least <code>$arrays[]</code> to get all values of one or more arrays, ignoring non-arrays.</li>
          <li>The functional notation <code>$array(index)</code>: Similar to objects, this syntax is allowed in all variants except standalone JSONiq. Again XQuery 3.1 raises an error on non-arrays (non-functions) or invalid indices, while JSONiq extension and Xidel return an empty sequence. Later also have <code>$arrays()</code> to get all values of the array.</li>
          <li>The lookup operator <code>$arrays?indices</code> of XQuery 3.1 can also be used for arrays and returns the values with the corresponding indices. <code>$arrays?*</code> will return all the values in the array.</li>          <li>The <code>$arrays[[index]]</code> operator. Standalone JSONiq uses double brackets to get array elements, returning the empty sequence for invalid indices. This is not supported in Xidel and I see no reason to add it.</li>
          <li>The helper functions: JSONiq has <code>members($arrays)</code> to get all values in a sequence of arrays, <code>flatten($arrays)</code> to get all values recursively and <code>size($array)</code> to get the size of a single array. In JSONiq extension or Xidel they are called <code>jn:members</code>, <code>libjn:flatten</code> and <code>jn:size</code>. XQuery 3.1 has similar functions <code>array:flatten</code> and <code>array:size</code>, as well as <code>array:get($array, $index)</code> to get a single value, which raise errors on non arrays.</li>
        </ul>
        
        Multiple notations also exist for creating objects and arrays:
        
        <ul>
          <li><code>{ $key: $value, ... }</code> is the normal JavaScript syntax to create objects and is supported in JSONiq and Xidel. <code>$key</code> and <code>$value</code>  can be any value, but the key is cast to a string and raises an error, if that  conversion fails. <code>{}</code> logically returns an empty object. <code>{| $objects |}</code> can be used to merge multiple objects with distinct keys to a single object. A further JSONiq syntax not yet implemented in Xidel is <code>{ $key ?: $value }</code> which omits the key/value pair, if the value is the empty sequence. In JSONiq XML values are copied, erasing the node identity and relationship to their ancestors. </li>
          <li><code>map { $key: $value }</code> the special syntax of XQuery 3.1 to create an object. The key is cast to an atomic value (not a string!) and the value can have any type.  </li>
          <li><code>[$value1, $value2, ...]</code> the standard JavaScript syntax to create an array. It is supported in any language, although with different semantics. In XQuery <code>[$value]</code> always creates an array of size 1, containing the single value <code>$value</code>, even if it is a sequence like <code>(1,2,3)</code>. In JSONiq and Xidel <code>[$value]</code> contains so many elements as <code>$value</code>, e.g. for the previous sequence the array will have size 3. </li>
          <li><code>array { $value1, $value2, ... }</code> the XQuery 3.1 syntax, which creates the same array as <code>[$value1, $value2, ...]</code> would create in JSONiq.</li>
        </ul>
        
        
        So to summarize the supported notations:
        <div class="largetable">
        <table>
          <thead><tr><th>Notation</th><th>XQuery 3.1</th><th>JSONiq s.a.</th><th>JSONiq ext.</th><th>Xidel</th></tr></thead>
          <tr><td colspan="5">Object access</td></tr>

          
          <tr><td><code>$object.key</code>, <code>$object."key"</code></td><td class="no">no</td><td class="yes">yes</td><td class="no">no</td><td class="yes">yes</td></tr>
          <tr><td><code>$object("key")</code></td><td class="yes">yes</td><td class="no">no</td><td class="yes">yes</td><td class="yes">yes</td></tr>
          <tr><td><code>$objects?keys</code></td><td class="yes">yes</td><td class="no">no</td><td class="no">no</td><td class="no">no</td></tr>
          <tr><td><code>$objects/keys</code>, <code>$objects!keys</code></td><td class="no">no</td><td class="no">no</td><td class="no">no</td><td class="yes">yes</td></tr>
          
          <tr><td colspan="5">Array access</td></tr>          

          <tr><td><code>$array(index)</code></td><td class="yes">yes</td><td class="no">no</td><td class="yes">yes</td><td class="yes">yes</td></tr>
          <tr><td><code>$arrays?indices</code></td><td class="yes">yes</td><td class="no">no</td><td class="no">no</td><td class="no">no</td></tr>
          <tr><td><code>$arrays[[indices]]</code></td><td class="no">no</td><td class="yes">yes</td><td class="no">no</td><td class="no">no</td></tr>

          <tr><td colspan="5">Object/array creation</td></tr>          
          <tr><td><code>{key: value, key2: value2, ...}</code></td><td class="no">no</td><td class="yes">yes</td><td class="yes">yes</td><td class="yes">yes</td></tr>
          <tr><td><code>map {key: value, key2: value2, ...}</code></td><td class="yes">yes</td><td class="no">no</td><td class="no">no</td><td class="no">no</td></tr>
          
          <tr><td><code>[value1, value2, ...]</code></td><td class="yes">yes</td><td class="yes">yes</td><td class="yes">yes</td><td class="yes">yes</td></tr>
          <tr><td><code>array {value1, value2, ...}</code></td><td class="yes">yes</td><td class="no">no</td><td class="no">no</td><td class="no">no</td></tr>
          
          
        </table></div>
        <br/>
        
        Btw, another advantage of my new webpage backend is that Xidel can dump all these crappy news in an RSS feed <a auto="*rss"/>.
        
      </text>
    </new>


    <new date="2016-03-21"> 
    <text language="de">Die Webseite ist nun von meiner <a auto="jaxmlp"/> Sprache zu <a auto="xidel"/>s XQuery migriert. Ein bisschen absurd, da ich VideLibri/Xidel dafür programmiert habe, die Daten von Büchereiwebseiten auszulesen, und jetzt erstellt es  stattdessen Webseiten. Aber das zeigt die Mächtigkeit von XQuery. <br/>
    Und es war schon wieder fast die Hälfte meiner Links tot. Da brauch ich mal ein besseres System, nur leider haben "Social Bookmarks" (del.icio.us) mit ihrer Abhängigkeit von fremden Servern auch nichts gebracht. Völlig überraschend ist das Spotlight-Forum jetzt wieder aktiv geworden. Damit hätte ich nicht gerechnet. Allerdings mit einem neuen Betreiber, nachdem der alte gestorben ist. Auch absurd, wenn ich nach alten Foren mit tausenden Nutzern google, und alles, was ich finde, ist die Linkliste auf meiner eigenen Seite. </text>
    <text language="en">I have migrated this webpage from my <a auto="jaxmlp"/> language to XQuery. It is a <a href="//hg.benibela.de/site/file/tip/style.xq.html">great example</a> how to generate a static webpage with <a auto="xidel"/>. Although keeping the HTML as XQuery expression, loading it as string, evaluating it with Xidel's <code>eval</code> function and writing the output with an EXPath function is not standard XQuery. But surely other XQuery processors can evaluate XQuery, too.<br/>
    JAXMLP worked on a byte stream and inserted XML elements parsed with the standard Java XML library, so the input had to be valid XML and the output could be anything. Xidel works on a tree representation, so it always creates valid HTML. Although Xidel's default parser accepts anything as input, unlike JAXMLP it cannot dump a CDATA section containing invalid X/HTML in an output stream, so I still had to change and correct the input files. <br/>
    Three things were surprising: First that PHP's <code>&lt;?php</code> doubles as XML processing instruction, so a PHP file can be valid XML. Secondly that JAXMLP's semantics was similar to XQuery's. <code>{{$IF download/screenshot != ""}}..{{$/IF}}</code> becomes <code>{if ($download/screenshot) then .. else ()}</code>, which even has the same number of characters. Third, that Xidel is 5 times faster than JAXMLP, despite the fact that JAXMLP just copies the data from the XML to the output, while an XQuery function in Xidel cannot change the immutable output, so it has to copy every node and children repeatedly in O(n^2). I blame the JVM overhead. On the very first start Xidel was even 30 times faster.<br/>
    The big advantage of Xidel is that I can now use all the overcomplicated XQuery functions on the webpage, like <code>format-date</code> to translate the dates between German and English. I hope this change did not break the IE5 compatibility, but I cannot find that IE version to test it anymore. </text>
    </new>

    <new date="2016-03-18"> <text>
    <div language="de">Jetzt habe ich die format-*-Funktionen doch zuerst implementiert, was nahezu 99% XQTS-Konformanz auch für XPath/XQuery 3.0 ergibt...<br/>Typisch für XQuery sind die Funktionen viel zu overengineered, zum Beispiel:</div>
    <div language="en">
       Another update of the Internet Tools: All the format-* functions are now implemented, which gives almost 99% XQTS-conformance for XPath/XQuery 3.0, too.  I did not plan to implement them as they are so silly, but then I was stuck in an airplane and to tired to work on anything else, so they seemed an ideal task. You can still see a few failing format-* tests in the report, one of the blocks with the most failures, but there the W3C just seems to have forgotten, what the functions are supposed to do.  <br/>
       Here is an example to show just how silly and overcomplicated they made a simple int-to-str conversion: </div>
    
<pre>("0", "٠", "𝟘", "𝟎", "߀", "೦", "꧐", "༠", "i", "a", "w", "w;t", "w;o", "W", "W", "w;o", "w;o(-er)", "#,0") 
! format-integer(position(), ., if (position() >= last() - 2) then "de" else ())
</pre>
Output:
<pre>1
٢
𝟛
𝟒
೬
꧗
༨
ix
j
eleven
dozen
thirteenth
FOURTEEN
FIFTEEN
sechzehnte
siebzehnter
1,8
</pre>
  </text>
           
    </new>

    <new date="2016-02-07"> 
    <text language="de">Endlich ist es geschafft: Mein <a href="sources_de.html#internettools">XPath 2.0 Interpreter</a> besteht alle Testfälle der XQuery Test Suite, selbst eine Silversterparty im Zwilling des Restaurants am Ende des Universums am <code>-25252734927766554-12-31</code> verwirrt den Interpreter nicht mehr.<sup>abgesehen von 0.1% der Testfälle, bei denen die Test Suite selbst falsch ist, oder ich einen Bugreport an die zugrunde liegende Bibliotheken geschrieben habe. </sup>. Die Fertigstellung von XQuery 1.0 geht jetzt auch schnell ( nur Zyklen in Variablen/Funktionsdeklarationen werden noch nicht richtig aufgelöst ) und dann kommt XQuery 3.0 (viel zu umständliche Zahlenformatierung). <br/>
    Es wird jetzt die <a href="https://github.com/BeRo1985/flre/">FLRE</a>-Bibliothek benötigt, da die Standard regexpr Unit die regulären Ausdrücke der Test Suite nicht verarbeiten kann. Aber es gibt weiterhin eine Option, um Sorokins regexpr zu verwenden.</text>
    <text language="en">After way too many years I have finally completed my <a href="sources_en.html#internettools">XPath 2.0 interpreter</a>. It can now pass every test case in the XQuery test suite successfully, even the weird ones, e.g. parsing dates preceding the universe like New Year's Eve <code>-25252734927766554-12-31</code>.<sup>Except for 0.1% of the cases that are just invalid or fail due to reported bugs in other libraries. </sup>.  Next goal is finalizing XQuery 1.0 ( mostly fails to properly resolve dependency cycles in function/variable declaration )  and then XQuery 3.0 (lacks some minor things and the integer/date formatting functions, which are way too overspecified. I stopped reading when they described the gendered integers of foreign languages.). <br/>
    It now requires <a href="https://github.com/BeRo1985/flre/">FLRE</a> as new regular expression library. There is still a compile option to use Sorokin's old library, however without FLRE it fails a lot of test cases.  </text>
    </new>
    <new date="2015-11-11"> 
    <text language="de">Die neuste Version der <a href="sources_de.html#internettools">Internet Tools</a> hat nun ein verkettbares, funktionales Interface auf der Pascalseite. Zum Beispiel <pre>query('1 to $_1', ['100']).filter('. mod 2 = 0').query('sum($_)')</pre> berechnet die Summe aller geraden Zahlen bis 100.<br/><br/>
     Und TeXstudio hat SourceForges Staff-Pick Projekt-des-Monats-Preis gewonnen. Jetzt ist es eines der wenigen Open-Source-Projekt, das den Preis zweimal bekommen hat. Nur leider nicht den Community-Projekt-des-Monats-Preis von der Umfrage. </text>
    <text language="en">So TeXstudio lost the community vote, but it was still picked as Staff POTM. One of the few open-source projects that received a SourceForge Project of the Month award twice.<br/><br/>The new version of the <a href="sources_en.html#internettools">Internet Tools</a> has now a LINQ-like interface, e.g. you can write <pre>query('1 to $_1', ['100']).filter('. mod 2 = 0').query('sum($_)')</pre> to get the sum of all even numbers below 100.</text>
    </new>
    <new date="2015-08-16"> 
    <text language="de">Hier sind zwei Abstimmungen:
          <ul><li>Ob Xidel's Standardsprache <a href="http://goo.gl/forms/E8vYgpa8nP" rel="nofollow">XPath oder XQuery</a> sein soll. (auf Google Forms, weshalb nach es dem Passwort fragt). XQuery hätte den Nachteil, dass es &amp; als Escapezeichen verwendet, so dass die meisten URLs keine gültigen XQuery Strings sind. XPath hat den Nachteil, dass es gar kein Escapezeichen gibt, so dass Leute es nicht schaffen, Anführungszeichen zu verwenden. Wobei es in Bash trivial ist, also ist die Umfrage im Grunde darüber, ob Xidel mehr unter Windows oder Linux verwendet wird.  </li>
          <li>Und wichtiger: ob TeXstudio wieder ein <a href="https://sourceforge.net/p/potm/discussion/vote/thread/2001cdf0/" rel="nofollow">SourceForge Project of the Month</a> wird.</li>
          </ul> </text>
    <text language="en">You can now vote: 
      <ul><li>If you rather want to use <a href="http://goo.gl/forms/E8vYgpa8nP" rel="nofollow">XPath or XQuery</a> in Xidel (on Google Forms, so you need to login). Too bad that XQuery uses &amp; as escape character, so URIs are not valid XQuery strings. </li>
      <li>And for TeXstudio to earn the <a href="https://sourceforge.net/p/potm/discussion/vote/thread/2001cdf0/" rel="nofollow">SourceForge Project of the Month award</a>. (let's just hope SourceForge does not go offline again)</li>
      </ul> </text>
    </new>
    <new date="2015-07-04"> 
    <text language="de"><a href="http://www.videlibri.de/">VideLibri</a> hat nun eine eigene Domain. Nachdem SourceForge angefangen hat, auch ungefragt Mal/adware in die Installer zu packen, ist eine SourceForge-Subdomain wohl untragbar geworden. Der Quellcode von VideLibri und Xidel ist nun wie meine anderen Projekte (außer TeXstudio) dreifach gehostet (hier, Github, Bitbucket. Fehlen noch welche? Gitlabs?). <br/><br/>
    Es gibt nun das schon etwas lange überfällige Xidel-Release (auf der VideLibri-Seite), welches den Großteil der XQuery 3.0-Syntax unterstützt  und die Auswertung der neuen XQuery Test Suite berücksichtigt. Die Internet Tools sind ebenfalls entsprechend aktualisiert.
     </text>
    <text language="en">It is astonishing how much the Internet affects the efficiency of programming. I did not have Internet access for some weeks, and everything went much faster without all those distractions. So I could implement the new XQuery 3.0 for-syntax, a query command as complex as the SELECT statement of SQL, in seemingly less time than it took to write this news entry.<br/>Thence there is now a new release of Xidel and the Internet Tools that supports almost the entire XQuery 3.0 syntax.
    <br/><br/>Also <a href="http://www.videlibri.de/xidel.html">Xidel</a> has now a page on a custom domain. Its source is triple hosted  (github, bitbucket and here; perhaps add Gitlabs, too?), like my other projects. (Except TeXstudio, it is too big. But people already made Github mirrors)  SourceForge seems to have earned a really suspicious reputation lately. I was hosting projects there to have them on the most trustworthy source, not the least. 
    </text>
    </new>
   <new date="2015-02-08"> 
       <text language="de"> Es hat viel zu lange gedauert (über ein Jahr), aber an Silvester habe ich es endlich geschafft, sämtliche <a href="documentation/internettools/xqts.html">Tests der neuen XQuery Test Suite</a> in meinem Interpreter auszuführen, von XPath 2 bis XQuery 3 inklusive Fehlertests, ohne dass die Auswertung wegen einer unerwarteten Exception abgebrochen wird. <br/>
       In der neuen <a href="sources_de.html#internettools">Internet Tools Version</a> gibt es nun für jede dieser Exceptions den passenden XQuery-Error-Code. Was leider auch heißt, dass viele Ausdrücke, die es bisher ausgeführt hat, nun als ungültig zurückgewiesen werden.<br/> 
       Außerdem unterstützt es jetzt weitere XPath/XQuery 3 Syntax, nämlich anonyme und higher order Funktionen, sowie die <code>Q{}</code>-Notation.
       </text>
       <text language="en"> On New Year's Eve, more than a year after the first attempt, I finally managed to evaluate the entire new XQuery Test Suite in all configurations from XPath 2 to XQuery 3 without aborting due to some unhandled exception. I made a really  bad decision when implementing everything without error codes at the beginning, and the XQTS evaluation are far too complex.<br/>
       Turns out the XQuery 3 support is <a href="documentation/internettools/xqts.html">still lacking</a>, even after implementing <code>Q{}</code>, higher order functions and spending the last months adding the error codes.<br/>
       At least the higher order functions seem to work perfectly in the <a href="sources_en.html#internettools">new version</a>. And the percentage of passed XPath 2 tests remained almost the same except for these codes.</text>
       </new>
    <new date="2014-10-13"> 
    <text language="de">Meine kleineren Open-Source-Projektrepositories gibt es nun auch <a href="http://hg.benibela.de/?sort=lastchange">hier</a> und auf <a href="https://bitbucket.org/benibela/" rel="nofollow">Bitbucket</a>, anstatt nur auf GitHub. Aber die beiden größeren bleiben ausschließlich auf Sourceforge, wie große Projekte es nun mal tun. </text>
    <text language="en">All my smaller open-source repositories are now also mirrored <a href="http://hg.benibela.de/?sort=lastchange">here</a> and on <a href="https://bitbucket.org/benibela/" rel="nofollow">Bitbucket</a>, instead only on GitHub (So it won't matter, if Russia blocks GitHub again like last week). Although the real big ones are still solely on Sourceforge. <br/>
    And I just noticed that my links on Delicious are still available there. I thought Yahoo had shutdown these servers years ago and the links were lost, but it seems they were just temporarily unavailable, while they sold the site. Perhaps time to fetch the links back, too.
     </text>
    </new>
    <new date="2014-08-23"> 
    <text language="de">Falls sich jemand gewundert hat, wo ich letzten Monat war: Auf Konferenzen im Amerika, um zwei Paper vorzustellen. Eines über <a href="http://auai.org/uai2014/proceedings/uai-2014-proceedings.pdf">Kausalität</a> (Achtung: pdf) für meine Doktorarbeit und eines über <a href="http://balisage.net/Proceedings/vol13/html/Zander01/BalisageVol13-Zander01.html">VideLibri/XQuery</a>. Es gab auch jeweils einen "best student (paper) award" dafür, was beim VideLibri-Paper wohl zeigt, dass damals in der Jugend Forscht Jury wirklich nur Idioten saßen, die nicht verstanden haben, um was es eigentlich geht, sonst hätte ich zumindest eine Runde weiterkommen müssen...
    </text>
    <text language="en">If someone is curious where I was last month: I went to conferences (protip: try to avoid transit at JFK when flying across the Atlantic), and presented two papers:
    One about my <a href="http://auai.org/uai2014/proceedings/uai-2014-proceedings.pdf">PhD project</a> (warning: pdf) and one about <a href="http://balisage.net/Proceedings/vol13/html/Zander01/BalisageVol13-Zander01.html">VideLibri/XQuery</a>. 
    </text>
    </new>
    
    
    <new date="2013-11-30"><text language="de">
    Hier ist, was ich bisher so von meinen alten oder neuen Programmen gefunden habe; viele Spiele und Schulsachen:
    <ul>
    <li>Ein uraltes <a href="games_de.html#burg">Mathelernspiel</a> für Kopfrechentraining</li>
    <li>Die vollständige Version von <a href="games_de.html#mausitanien.zip">Mausitanien</a></li>
    <li>Ein <a href="games_de.html#kampfsimulator">Kampf-Simulator</a> für das "Stadt der Diebe"-Buch, damit man bei Monsterbegegnungen nicht selbst würfeln und rechnen muss</li>
    <li><a href="games_de.html#defendrix">Defendrix</a>, ein Spiel für die Windowskonsole mit einem ASCII Raumschiff. Sieht am ältesten aus, ist aber das neueste dieser Spiele. In alter Tradition ist es extrem schwer zu spielen</li>
    <li>Ein <a href="games_de.html#schnippja">Farbratespiel</a> ähnlich wie Mastermind</li>
    <li>Mein altes <a auto="chemiebbo">Chemieheft</a>. Interessant nur, weil ich dafür ein eigenes Dateiformat geschrieben habe (aber html wäre besser gewesen)</li>
    <li>Ein unvollständiger <a href="tools_de.html#cipherdecoder">Chiffren-Decoder</a>. Für die letzten Übungsblätter wäre er trotzdem nützlich gewesen.</li>
    <li>Ein Referat über <a auto="euglena">Euglena</a>. Mit einem Java-Applet für eine virtuelle "Simulation" von dem Einzeller.</li>
    </ul><br/>
    
    Das ist aber noch nicht alles.
    </text>
    </new>
    
    <!--
    burg
    kampfsimulator
    mausitanien vollversion
    schnippja
    defendrix

    chemie heft
    
    chiffrendecoder
    euglena
    -->
    
    <new date="2013-11-19"><text>
    There was a bug in the string conversion of the big decimal math. It is fixed now. (very surprising since I had a test for this case. Seems like I forgot to run all the tests)
    <p>Also the bbutils now work with Delphi (4), since there was a feature request for that...</p>
    </text></new>
    <new date="2013-11-18"><text language="de">
    Eine überraschende Konsequenz davon, dass jetzt plötzlich so viele versuchen VideLibri nachzuprogrammieren, ist, dass ich dadurch einen neuen <a href="http://uberspace.de/" rel="nofollow">Webhoster</a> gefunden habe. Zwar scbon im Mindestpreis zehnmal so teuer wie der alte Tarif beim <a href="http://planet-hosting.de/" rel="nofollow">alten Hoster</a>, aber dafür kriegt man Shellzugriff und 10 GB statt wie bisher 30 MB Speicherplatz. (so dass es keine Speicherüberschreitung gibt und es im Endeffekt doch billiger ist...)
    <p>Das heißt, ich kann jetzt mal ein paar neuere Sachen hochladen, die also nicht 10 Jahre alt sind wie der Großteil der bisherigen Daten hier und für die es bisher einfach nicht genug Speicher gab. Mal angefangen mit meiner <a auto="master">Masterarbeit</a>.</p>
    <p>Unabhängig davon gibt es auch eine neue Version der <a href="sources_de.html#internettools">Internet Tools</a>. Die wichtigste Neuerung ist die Unterstützung für das Rechnen mit Dezimalzahlen beliebiger Genauigkeit, was meine alte 65-Bit Arithmetik ersetzt und den vollen Umfang von <code>xs:decimal</code> realisiert. Des Weiteren habe ich die neueste Version des JSONiq-Standard implementiert, das Typsystem vollständig umgeschrieben als Vorbereitung für XML Schema-Unterstützung (heißt, es unterstützt keine XML Schema, aber man kann sie vermutlich pluginmäßig implementieren, ohne etwas am bisher existierenden Code ändern zu müssen) und angefangen, ein paar Sachen von XQuery/XPath 3 einzubauen.<br/>Die <a href="sources_de.html#bigdecimalmath">arbitrary-precision Funktionen</a> gibt es auch als Einzelunit, unabhängig von den Internet Tools.</p>
    <p>Und Anmerkung zur letzten News: TeXstudio hat die Abstimmung von SourceForge tatsächlich gewonnen! (wobei, eigentlich ist es auf Platz 2 gelandet, aber das Projekt von Platz 1 wurde wegen Voting-Fraud (von dritter Seite?) disqualifiziert...)</p></text>
    <text language="en">I moved my page to a new web hoster, where it has can astounishing 10 GB instead 30 MB quota.
    
    <p>Therefore I can now upload some things, which would have been far too big for the old hoster. Starting with my <a auto="master">master thesis</a>. (It is even in English, first English pdf here)</p>
    
    <p>There is also an update of my <a href="sources_en.html#internettools">internet tools</a>. The biggest change is that the XQuery engine can now calculate with arbitrary precision decimal numbers. This replaces my old 65-bit arithmetics and allows you to use almost the full range of <code>xs:decimal</code> (well the full range would be infinite, but for that you need more memory...). Now it also supports the newest JSONiq standard (a standard that changes every few months is a little bit annoying), some minor operators of the XPath/XQuery 3.0 standard (too busy to implement the full standard right now), and the type system was almost completely rewritten in preparation of xml schema support (meaning there is no xml schema support, but it could be added by just writing new source and not modifying the old one).<br/>
    The <a href="sources_en.html#bigdecimalmath">arbitrary-precision bcd floats</a> can also be used as standalone unit, independent of the internet tools. </p>
    
    <p>And a comment to the last news: TeXstudio actually won the sourceforge award!</p>
    </text></new>
    <new date="2013-07-13"><text language="de">
    Seit einer Weile gibt es nun VideLibri auch als <a href="https://play.google.com/store/apps/details?id=de.benibela.videlibri">Android-App</a>. Zudem habe ich mal eine Liste, der Bibliotheken erstellt, welche von VideLibri unterstützte Systeme verwenden. Schon beinahe 170 Büchereien. Dauert ewig, sie alle anzuschreiben.<br/><br/>
    Für die Internet Tools gibt es ein Update mit ein paar trivialen Änderungen/Bugfixes. Z.B.: &lt;s>-Elemente (<i>s</i>hortcut-Elemente, deren als XQuery/XPath-Statement ausgeführt wird) werden auch in Gesamttemplates unterstützt, und es gibt mehr Funktionen in der XQuery-Engine, um Werte in url-encoded Daten zu verändert. <br/><br/>
    Eine neue TeXstudio-Version (Bugfix-Release) wird es auch bald geben. In der Zwischenzeit läuft eine Abstimmung für das <a href="http://twtpoll.com/4j7el6">Sourceforge Projekt des Monats</a> und TeXstudio hat gute Chancen zu gewinnen. 
    </text><text language="en">
    A simple update for the Internet Tools (with changes needed for VideLibri):  &lt;s>-elements (<i>s</i>hortcut-elements to evaluate a XQuery/XPath statement) are allowed in multipage templates, and the XQuery engine supports more functions to change url-encoded data. Also fixes the progress calculation of the synapse wrapper.<br/><br/>
    And as so often there is a new TeXstudio version (bug fix release) coming. By the way you can vote for it to become the <a href="http://twtpoll.com/4j7el6">Sourceforge project of the month</a>.
    </text></new>
    <new date="2013-06-16"><text language="de">
    Meine Open-Source-Projekte sind jetzt auch auf <a href="http://github.com/benibela" rel="nofollow">GitHub</a> gelistet, abgesehen von denen, die schon auf Sourceforge sind, und denen, die ich in der Mittelstufe geschrieben habe. Auch wenn es nicht viel Sinn macht, ein Mercurialrepository auf github zu haben, und ich finde, dass die Webpage alleine eigentlich völlig ausreichend ist, zumal sie sowieso <i>viel</i> älter als GitHub ist...<br/><br/>
    Und wir haben diese Woche eine neue <a href="http://texstudio.sourceforge.net/" rel="nofollow">TeXstudio</a> version veröffentlicht.
    
    </text><text language="en">
      I made mirrors of my projects on <a href="https://github.com/benibela" rel="nofollow">GitHub</a>. Not all of them of course, do not want people to look at the source of the programs written  during junior high school ;) Kind of strange to have a Mercurial repository on github through, and sad to surrender it all to a newcomer (this page is <i>far</i> older than github), but it is so popular nowadays...<br/><br/>
      
      Also we released a new <a href="http://texstudio.sourceforge.net/" rel="nofollow">TeXstudio</a> version (2.6) this week.
    </text></new>
    <new date="2013-05-16"><text language="de">
    Zuerst eine alte News, die ich vergaß zu posten: Vor ein paar Monaten gab es einen Blogpost, dass die GBV-Bibliotheken nun eine API für Ausleihendaten namens <a href="http://gbv.github.io/paia/paia.html" rel="nofollow">PAIA</a> entwickeln. Leider ist es eine JSON-API und VideLibri hatte noch keine Unterstützung für JSON, da ich meine ganze Zeit dafür verwendet habe, eine XQuery-Engine zu schreiben, um HTML/XML-APIs optimal zu verarbeiten.<br/>
    Also, mit Overkill wie üblich, hatte ich dann vor ein paar Monaten den gesamten <a href="http://www.jsoniq.org/" rel="nofollow">JSONiq-Standard</a> in den <a href="sources_de.html#internettools">Internet Tools</a> und VideLibri implementiert. Seitdem kann VideLibri nun auf die Daten aller Bibliotheken zugreifen, die PAIA unterstützen.<br/>
    Leider scheint es, dass es immer noch keine PAIA-Büchereien gibt. Nicht einmal im GBV ist die serverseitige Implementierung fertiggestellt...<br/><br/>
    Die neue Version der Internet Tools läuft nun auch unter arm/x86-Android, indem sie die Apache HttpComponents durch JNI aufrufen. Außerdem wurde  berichtet, dass sie unter MacOSX funktioniert, wenn man es mit der neuesten Synapselibrary kompiliert hat. Und jemand anders wollte es unter arm-WinCE verwenden, und nachdem ich ein paar Kompatibilitätsprobleme gelöst habe, kompiliert es auch dort (aber es gab leider kein Feedback, ob es zur Laufzeit funktioniert). 
    </text><text language="en">
    Seems like I forgot to announce that I added  <a href="http://www.jsoniq.org/" rel="nofollow">JSONiq</a> support to the <a href="sources_en.html#internettools">Internet Tools</a> some months ago. It can be used to process JSON-data in the templates, so you can access JSON and XML-APIs without having the application care about the type of the API.<br/>
    There is also a new backend for Android to download/upload stuff there, using the Apache HttpComponents through JNI. It works fine on arm-Android and x86-Android. Regarding other platforms: someone confirmed to use it successfully on MacOSX with the newest Synapse version, and someone else wanted to use it on arm-WinCE and after fixing some issues (missing extended float, widechar as default), it compiles there as well. (but I did not receive feedback, if he could actually run it). <br/>
    I also added a function to the <a auto="treelistview">TTreeListView</a> to place the record/columns items at arbitrary positions, which can be used to create a list which looks and scrolls like the standard Android listviews. It seems to run (very slowly through) on the emulator, but all the Standard components of Lazarus are so buggy there that I gave up on using Lazarus for Android. So I did not test further, if the treelistview is actually usable on Android.
    </text></new>
    <new date="2012-12-13"><text language="de">
    Mein altes mathSys ist wieder da! Nur heißt es jetzt <a href="http://www.benibela.de/tools_de.html#bbmultiplot">BBMultiPlot</a>.<br/> Noch immer das bester freie, mathematischer Plotter für Funktionsscharen, das ich kenne.<br/>
    Vor ein paar Jahren hatte ich im Internet ein anderes, noch älteres Programm namens "mathSys" gesehen, und mein mathSys von der Webseite genommen, damit es keine Namenskonflikte gibt. Leider bin ich dann vor lauter Zeitverschwendung mit VideLibri und dessen XQuery-Backend nie dazu gekommen, es umbenannt wieder zu veröffentlichen. Und damals habe ich auch noch keine Versionskontrolle verwendet, so dass ich nicht mehr feststellen kann, welche Kopie des Quellcodes eigentlich die richtige ist. Und mit dem Lazarus, das ich nun statt Delphi verwende, lässt es sich sowieso nicht kompilern...<br/>
    Deshalb gibt es auch kein neues Release, sondern nur wieder das alte Binary, mit einer readme, die sagt, dass es jetzt BBMultiPlot heißt. Im alten Sourceverzeichnis habe ich zwar auch ein neues Binary gefunden, das auch moderner aussah, aber beim Testen mehr Bugs hatte. (und ein seltsames Testfenster anzeigt. Es scheint, ich wollte auch mal einen BigInteger mit fast-fourier-Transformation-Multiplikation für es schreiben.) Ich habe dann noch versucht, den Titel vom alten Binary in einem Hexeditor zu ändern,  aber es ist mit upx 0.8 (oder so) komprimiert, und das lässt sich nicht entpacken. Ollydbg mit Ollydump hat auch nicht weiter geholfen..<br/>
    Den gefundenen Quellcode habe ich auch mit hochgeladen, vielleicht gibt es noch Leute, die Delphi benutzen, und ausprobieren wollen, ob es tatsächlich der richtige ist.  <br/>
    Übrigens läuft die exe mit WINE auch prima unter Linux.
    </text><text language="en"> I just found a version of my mathSys on an old usb stick (almost 7 years old, holy shit), and remembered that I wanted to put it back on my webpage,  since it is still the best free, open-source (well, open-source for me back then. But now for all) plotter for families of curves of parametrized (or multivariable) functions I have ever seen. But some years ago googling showed that someone else had used that  mathSys name before, and I wanted to avoid some stupid name conflicts, so I took mathSys down. (and went on to create texmakerx instead. Very clever). Anyways, mathSys is  now called <a href="http://www.benibela.de/tools_en.html#bbmultiplot">BBMultiPlot</a>.<br/>
    I updated the source to the new name, but cannot compile an updated binary, since I no longer use Delphi/Windows and am not even sure, if I found the correct version of the source. I tried to change the name of the binary in a hex editor, but that failed, since I had compressed it with upx to fit in the 30 mb website quota. An obsolete version of upx (0.8?) that the upx tool itself cannot decompress. And dumping it in ollydbg or some petools just produces a larger binary (with the entry point set to the jmp after popad) that crashes on startup. Anyone has an idea?
    </text>
    </new>
    <new date="2012-11-06"><text language="de">
    Die <a auto="internettools">Internet Tools</a> unterstützen nun XQuery, statt nur XPath 2!<br/> Und die variant-Klassen in der API wurden durch Interfaces ersetzt, so dass sie jetzt ref-counted sind.
    </text><text language="en">
    The <a auto="internettools">Internet Tools</a> support now XQuery, instead of only XPath 2! <br/> And all the variant-classes in the API were replaced by ref-counted interfaces.
    </text></new>
    <new date="2012-09-26"><text language="de">
    Mal wieder ein Update:
    <ul><li><a auto="internettools">Internet Tools</a>: Sie unterstützen nun CSS 3 Selektoren, direkt und innerhalb von XPath-Ausdrücken. Und es gibt eine XPath-Funktion <code>form</code>, die das HTTP-Request für eine HTML-Form berechnet und als Objekt zurückgibt. Die Internetaccess-Klasse gibt einem Zugriff auf die HTTP-Header, und der Htmltreeparser erkennt die Zeichenkodierung auch dann, wenn die Angabe im http-equiv meta-Tag <i>falsch</i> ist und einem korrekten Content-Type Header widerspricht (Da hat die Münchener Stadtbücherei wirklich einen <i>super</i> programmierten Katalog). <br/> Die Internet Tools enthalten nun auch die Klasse für Mehrseitenabfrageskripts von VideLibri, und es gibt ein  <a href="http://videlibri.sourceforge.net/xidel.html" rel="nofollow">Commandlinetool Xidel</a> als Wrapper um die Internet Tools mit dem man Templates und XPathausdrücke auf Webseiten anwenden kann, ohne Pascal zu kennen oder Büchereien zu stören. <br/> Und es gibt nun ein <a href="http://userscripts-mirror.org/scripts/show/144991" rel="nofollow">Greasemonkey-Skript</a>, das die Templates für VideLibri/Xidel automatisch erstellen kann, wenn man die entsprechenden Werte in Firefox markiert.<br/>Nun soll ich den XPathparser zu XQuery ausbauen, oder nicht? So groß ist der Unterschied nicht...</li>
    <li><a href="sources_de.html#rcmdline">TCommandLineReader</a>: mein Kommandozeilenparser funktioniert nun auch unter Linux. (er hat früher nicht funktioniert, weil die fpc RTL-Funktion zum gesamten Kommandozeilenauslesen unter Linux keine einfachen Anführungszeichen unterstützt! Und umgekehrt funktioniert die RTL-Funktion zum Lesen der aufgeteilten Argumente unter Windows nicht mit einfachen Anführungszeichen! Weshalb ich den Kommandozeilenparser überhaupt erst geschrieben hatte...)<br/>Und es gibt jetzt eine Unterklasse, die als cgi-Service läuft und die Argumente von GET/POST-Requests liest anstatt von der Kommandozeile.</li>
    <li>TeXstudio: da gibt es immer neue Features...</li>
    </ul>
    </text>
        
    <text language="en">
    Some updates: 
    <ul><li><a auto="internettools">Internet Tools</a>: They do now (well, since a month) support css 3 selectors, standalone or within XPath expressions, and now have a new XPath function <code>form</code> that converts a html form in an object describing the corresponding http request. The internet access class lets you read/write the http header, and the html tree parser will choose the correct encoding, if the Content-Type header and the http-equiv meta tag specify different encodings. <br/> I also forked the multipage query scripts/templates from VideLibri in a new class that is now part of the internettools, and made a command line tool <a href="http://videlibri.sourceforge.net/xidel.html" rel="nofollow">Xidel</a> that let you use all the internet functionality of VideLibri/Internet Tools without requiring some stupid libraries (the book kind). <br/> And I wrote a <a href="http://userscripts-mirror.org/scripts/show/144991" rel="nofollow">GreaseMonkey script</a> that can automatically generate the scraping templates (or most of them) for VideLibri/Xidel by selecting the values on the webpage in FireFox.</li>
    <li><a href="sources_en.html#rcmdline">TCommandLineReader</a>: my command line reader does now work on Linux. (it did not work before, because the rtl function I used to read the cmdline does not support single quotes on Linux! Quite ironically, since I wrote the command line reader, because the other parameter-reading rtl function does not support single quotes on Windows!)<br/>I also extended it to read the arguments from GET/POST-requests, instead of only the command line.</li>
    <li>TeXstudio: many, many new features...</li>
    </ul>
    </text>
    </new>
    <new date="2012-05-03"><text language="de">
    Mal wieder was neues, auch wenn es nicht so wirklich neu ist: Der <a auto="internettools">Internet-Tools-Parser</a> ist noch mehr erweitert und  nun eine fast Standard-konforme XPath 2-Implementierung. Zusätzlich unterstützt er jetzt auch eine Art Objekte und die übergeordnete Templatesprache erlaubt auch Abkürzungen für häufige Befehle, wie {...} für &lt;template:read/&gt;. 
    </text><text language="en">
    Another update to the <a auto="internettools">internet tools parser</a>. It is now almost standard compatible, up to mostly <a href="documentation/internettools/internettoolsxqts.html">rounding issues and missing namespace/dtd/schema support</a> and my extensions like variable assignments and (new) some kind of objects. And the template language itself allows you now to abbreviate common commands, e.g.  &lt;template:read/&gt; can be written as {...} or &lt;template:loop/&gt; as *.
    
    </text></new>    
    <new date="2011-07-10"><text language="de">
    Ich habe den Internet-Tools-<a auto="internettools">Parser</a> ein wenig erweitert, und nun ist er fast Standard-konforme XPath 2-Implementierung (im wesentlichen gibt es alles bis auf namespaces und das ganze Datenmodellzeugs).  <br/>
    Und hier ist ein <a auto="cryptsem"> Kryptographieseminarpaper</a>
    </text><text language="en">
    I added a few constructs to the internet tools parsers, so that the <a auto="internettools">pxp parser</a> is now a almost standard compliant implementation of XPath 2. (did you know that  <pre>every $x in satisfies satisfies satisfies</pre> is always true?) 
    
    </text></new>
    <new date="2011-03-25"><text language="de">Das SIRDSlets-Spiel hat jetzt einen Regenbogenfarbenmodus, obwohl ich den Modus eigentlich weglassen wollte, da er zu leicht ist und in einem Stereogramm-Spiel der Stereogrammmodus am einfachsten sein sollte, aber er sieht hübsch bunt aus.
    </text><text language="en">
    I added a rainbow color mode to the sirdslets game, although I didn't really wanted to include it, because it makes the game to easy to play (i.e. actually playable) in the non sirdslets modes. But it looks nice.
    </text></new>
    <new date="2011-02-26"><text language="de">
      Da ja jetzt fast alles auf SF mit öffentlichen Commitlogs ist, habe ich in letzter Zeit keine News mehr darüber geschrieben.<br/>
      Aber dies sind die Änderungen der letzten Monate:
      <ul>
      <li> <a href="tools_de.html#regexgen">regexgen</a>: Ist neues kleines Programm um alle Strings zu finden, die einen regulären Ausdruck erfüllen. (d.h. es arbeitet genau umgekehrt zu allen anderen Regexengines) </li> 
      <li> bbutils: ein paar behobene Fehler, sehr viel mehr Array-Funktionen, die ganze Unit wird automatisch aus einem Pascal-Template erstellt. </li> 
      <li> Internet Tools: Das Interface wurde leicht geändert, und ein paar low-level html-Parsingfehler sind behoben. PXPath: Die Variablen sind nun Teil der PXPath-Syntax und werden nachträglich ersetzt, so dass man sie nicht mehr in Gänsefüßchen schreiben soll (darf!). Und es ist noch ähnlicher zum echten XPath (mehr Selektoren und mehr Funktionen). </li>      
      <li> TreeListView: Die Scrollbargröße wird nicht mehr auf einen negativen Wert gesetzt, wenn die View-Größe 0 ist. (weil sonst Lazarus die Form nicht mehr lädt!)   </li>
      <li> VideLibri funktioniert nun auch in Berlin; dank Leonid, der mir seine Kontodaten geschickt hat.  </li>
      <li> SIRDSlets: Neue Hintergründe. (Ich vermute, das Bild muss die Autokorrelation der Helligkeit von mittelgroßen Flecken minimieren, um den besten 3D-Effekt zu erzeugen)  </li>
      </ul>
    </text>
    <text language="en">
      Since everything is now on SF with public commit logs, I didn't write any news here, but these are the changes of the last months:
      <ul>
      <li> <a href="tools_en.html#regexgen">regexgen</a>: a new little program which is the inverse of an usual regex engine and generates all matches to a given regex. (you could use it as a replacement of John's non standard rules if you known a certain structure :-) </li> 
      <li> bbutils: some bugs fixed, faster, and much more array functions. Latter are all trivial, but tedious to write for all cases, so the complete unit is now auto generated from a Pascal template.  </li> 
      <li> Internet Tools: Some interfaces are changed and some low-level html parsing bugs are fixed. PXPath: The $..;-variables are now part of the PXPath-syntax, so they can be replaced in  the evaluation step and don't have to be written in quotes anymore (actually must not). And it is more similar to real XPath with support for all selectors and much more functions. </li>      
      <li> TreeListView: It doesn't set the scrollbar size to a negative value anymore, if the view size is 0. (because stupid Lazarus refuses to open a form with negative sizes instead of clipping the value) </li>
      <li> SIRDSlets: New backgrounds. (I think the image has to minimize the auto correlation of the brightness of middle large points to generate the best 3d effect.)  </li>
      </ul>
    </text>
    </new>
    <new date="2010-10-11"><text language="de">
    Huch, was ist denn mit VideLibri los? In den vier Jahren, die es auf dieser Seite lag, wurde es praktisch kein einziges Mal heruntergeladen, nun ist es drei Tage auf SourceForge und wurde schon 778 mal runtergeladen. Weitaus öfter als TexMakerX in der gleichen Zeit, obwohl es keine fremden Links darauf gibt, außer mehreren aus Japan (Und wen interessiert es in Japan?). Am Quellcode kann es nicht liegen, der wurde nämlich nicht heruntergeladen.
    </text></new>
    <new date="2010-10-09"><text language="de">
    VideLibri habe ich jetzt auf <a href="http://videlibri.sourceforge.net">SourceForge</a> verschoben; hier findet es ja niemand und mittlerweile ist es so groß geworden, dass die Webseite nicht genug Speicher dafür hat.
    </text></new>
    <new date="2010-09-24"><text language="de">
      Es gibt jetzt eine neue Videlibri Version (0.998). Ich weiß gar nicht, ob man einen Unterschied zur vorherigen Version bemerken kann, auf jeden Fall habe ich die Templates für die Büchereien mit dem neuen Html-Parser vereinfacht.<br/>
      Und eigentlich hatte ich gehofft, dass jemand es von selbst entdeckt, aber da es immer noch niemand verwendet, verrate ich es mal hier: Im Infodialog von VideLibri, kann man und konnte man schon immer -- wenn man richtig klickt -- Snake spielen!<br/>
      Ansonsten habe ich noch ein paar Sachen geändert, zum Beispiel, das sich eine Unit der Internet Tools nicht unter Windows compilern ließ.
    </text><text language="en">I tried to write an automatical sourceforge bugtracker/forum responder, which should be trivial with my internet tools library, but it was surprisingly complicated. First sourceforge does not seem to understand host names in the format hostname:port, which is the default format of synapse. Then sf responds with a lot of redirections which neither my library nor synapse followed. Sf also uses the wrong (not standard compliant, although widely used) http status code for these redirections. And finally sf has banned the user agent "Mozilla 3.0 (compatible)" which was my default agent. It only works with "Mozilla/3.0 (compatible)". And everything is encrypted with https, so you could hardly debug it with Wireshark.<br/>
    In the new update I changed that, and you can now compile it on Windows, too.  </text> </new>
    <new date="2010-09-09"><text language="de">Heute habe ich noch eine <a auto="seminarCV2010">Seminararbeit über Bildsegmentierung</a> vom letzten Semester hochgeladen. Die Bilder musste ich allerdings stark komprimieren, damit der Text noch so gerade auf die Seite passt (obwohl sie sowieso schon 10 mb größer ist als erlaubt), eigentlich sehen sie also schöner aus. </text> </new>
    <new date="2010-09-05">
    <text language="de">Ups, jetzt habe ich tatsächlich im letzten bbutils/internettools-Update &amp;szlig; vermasselt, ich dachte das wäre ein ascii-Zeichen. Mit dem neuen Bugfix unterstützt es nun aber wirklich alle Entities aus dem Standard, selbst die von MathML. </text>
    <text language="en">I broke the &amp;szlig; handling in the latest bbutils/internettools update, now it is fixed and even supports all entities, including those of MathML. </text>
    </new>
    <new date="2010-08-29">
    <text language="de">Jetzt gibt es einen neue Version vom <a auto="internettools">HTML-Templatematcher</a>. Er läuft jetzt tausendmal langsamer mit tausendmal höherem Speicherverbrauch. <br/> Die alte Version hat einen NFA mit einer cleveren Heuristik verwendet, um das Template mit der Textdarstellung einer HTML-Datei in O(1) zusätzlichem Speicher und Linearzeit zu vergleichen, die neue Version verwendet wie alle anderen HTML-Parser eine Baumdarstellungen, die O(n) Speicher erfordert und darauf Backtracking mit einer Laufzeit von vielleicht O(k^n).<br/>Das ist genau das, was ich eigentlich nicht machen wollte, aber es hat sich herausgestellt, dass die Templates dadurch sehr viel leichter zu verstehen und zu schreiben sind, weil es keinerlei Seiteneffekte mehr gibt. Außerdem benötigt es immer noch nicht mehr als ein paar Millisekunden für das Verarbeiten einer Datei (schneller als das Runterladen der Datei), und der Matcher beweist nun, ob das Template der HTML-Datei entspricht oder nicht. Er ist jetzt auch in drei unabhängige Klassen zerlegt, die sich separat verwenden und leichter testen lassen.<br/> Ansonsten haben sich dabei auch die bbutils (Funktionen umbenannt oder entfernt), das TreeListView und die Suchleiste (eine Methode entfernt, um LCL 27190 kompatibel zu sein) geändert. </text>
    <text language="en">I made a new version of my <a href="sources_en.html#internettools">template based html parser</a>. It is now probably thousand times slower and needs a magnitude more memory.<br/>The old version used a  NFA combined with a very clever heuristic, to match the template to the html page directly with O(1) memory and O(n) time, the new version uses simple backtracking on a DOM-like tree -- like everyone else does it --  with O(n) memory and I-don't-know-how-much time (perhaps O(k^n)?).<br/>But it still runs in a few milliseconds, it is easier to understand the templates, and most important, the matcher/parser can now prove that a matching is possible or not. I also splitted it into three separate classes which makes it more easy to test.<br/>Furthermore I had to change with the parser the bbutils (functions renamed or removed), the TreeListView and the search bar (A method removed to be LCL 27190 compatible). </text>
    </new>
    <new date="2010-08-26">
    <text language="de">Als ich gerade den vorherigen Artikel auf "unübersetzt" setzen wollte (was ich dann aber doch nicht gemacht habe, da die Textfarbe dadurch grau wird, und das nicht zu den bunten Tabellen passt), habe ich gemerkt, dass JAXMLP überhaupt keine Klammern in den If-Bedingungen erlaubt hat, warum auch immer, vielleicht weil es den Schwierigkeitsgrad fürs Parsen von trivial auf einfach erhöht. Die neue Version unterstützt sie jetzt aber.</text>
    <text language="en">When I wanted to display the article below as "untranslated" on the German version, I noticed that JAXMLP did not support parentheses in if-conditions (perhaps because it would increase the implementation difficulty from trivial to easy). Anyways, I changed it and you can now use brackets there.  </text>
    </new>
        <new date="2010-08-26">
<text>
I just started to rewrite my fpc html template parser (which of course involves hours of debugging and patching Lazarus, before I can start to program anything else) and found two bugs due to an invalid string->pchar conversion. And although this is an absolutely trivial conversion, no one seems to have examined and described, how to do it best. So, here is a detailed analysis:

<h4>Converting ansistring to pchar</h4>
<p>
Converting a <a href="http://www.freepascal.org/docs-html/ref/refsu10.html">ansistring</a> to <a href="http://www.freepascal.org/docs-html/ref/refsu13.html">pchar</a> should be pretty simple, because  the text itself is stored in almost the same way in both cases. 
If you have a variable str: string, there are three popular ways to convert it to a pchar: pchar(str), @str[1] and pchar(pointer(str)), but it is not obvious which is the best way to do the conversion.</p>

<p>
If you don't want to bother with the technical details, <i>you can always use <code>pchar(str)</code></i> and treat the result as a read-only pchar. But this is not the most efficient way to convert the string, and the following table summarizes the advantages (always green) and disadvantages (always red) of the other methods:</p>

<div class="largetable">
<table style="margin-left:auto;margin-right:auto">
<thead>
<tr><td class="invisible"></td><td>Example</td><td>No copy</td><td>Branch free</td><td>Nil aware</td><td>Range safe</td><td>$H- safe</td></tr>
</thead>
<tbody>
<tr><td>Explicit</td> <td><code>p := pchar(str)</code></td> <td class="yes">yes</td> <td class="no">no</td> <td class="yes">yes</td> <td class="yes">yes</td> <td class="yes">yes</td> </tr>
<tr><td>Array like</td> <td class="code">p := @str[1]</td> <td class="yes">yes</td> <td class="yesno">without $R</td><td class="no">no</td> <td class="no">no</td> <td class="no">no</td> </tr>
<tr><td>Indirect</td> <td><code>p := pchar(pointer(str))</code></td> <td class="yes">yes</td><td class="yes">yes</td> <td class="no">no</td> <td class="yes">yes</td> <td class="yes">yes</td> </tr>
</tbody>
</table></div>

<p>
The meaning of the columns is:
<ul>
<li>No copy: None of the methods above copies the content of the string.</li>
<li>Branch free: yes, iff the conversion works without branching instructions (hidden ifs). Branching is always very slow and  even if modern computers are fast enough that it usually does not matter, you sometimes have/want to make something as fast as possible.  </li>
<li>Nil aware: yes, if it works if str=nil. </li>
<li>Range safe: no, iff the conversion can fail if you enable range checking with the $R+ or -Cr option. <br/> <code>@str[1]</code> will raise a range checking error if the string is empty, because s[1] doesn't exist then. </li>
<li>$H- safe: no, if it also compiles with shortstrings. This section is only about conversion of ansistrings to pchars and none of the methods supports shortstrings. However, sometimes you forget to enable the $H+ option and every string becomes a shortstring.  If you then use @str[1], it can randomly crash, because shortstrings are not null-terminated. The other two methods are safe, because they will not compile.</li>
</ul></p>

<p>
So you should never use @str[1] to convert it to a pchar, and pchar(pointer(str)) only if you understand what nil aware means. <br/>
It is said that every ansistring is null-terminated, but this is not exactly true. There is one (and only one!) case in which a ansistring str is not null-terminated: If str is empty (<code>str = ''</code>). Then str is nil.<br/>
<code>pchar(str)</code> will detect this case and returns a pointer to a global #0 character, but <code>pchar(pointer(str))</code> will return nil. So <i>you can always use <code>pchar(str)</code>, and <code>pchar(pointer(str))</code> only if your string is not empty</i> and you can prove this.<br/>
(and as a remark: if you ever get a string which is not '' and not null-terminated, you probably forget to enable $H+ or - less probably - something wrote to a wrong pointer. )</p>

<p>
So why should you not always use <code>pchar(str)</code>? <br/>
Because it is much slower than the two other methods, since <code>pchar(str)</code> checks for the nil-case, and this is often unnecessary.</p><br/>
<p>Some people also say <code>pchar(str)</code> calls <code>UniqueString</code> to reset the reference count of the string, but this is wrong. <code>pchar(str)</code> does not call any function.</p>

<p>To see how worse the check is, you have to look at the assembly of the program (generated with fpc2.4 on amd64, not affected by optimization levels (which is strange because the assignment to rax was duplicated)):</p>

<p>
<code>pchar(str):</code>
<pre>
1    mov    rax,QWORD PTR <i>string variable</i>
2    test   rax,rax
3    jne    <i>to 5</i>
4    mov    rax, <i>global #0 address</i>
5    mov    QWORD PTR <i>pchar variable</i>,rax
</pre>

<code>p := pchar(pointer(str))</code> or <code>p := @str[1]</code> with $R-:

<pre>
1    mov    rax,QWORD PTR <i>string variable</i>
2    mov    QWORD PTR <i>pchar variable</i>,rax
</pre>

So the check requires three additional instructions, and one is a jump instruction which will be executed iff the string is not empty.</p>

Benchmarking (100000000 * 8 times repeated) results in:
<div class="largetable">
<table style="text-align:center; margin-left:auto;margin-right:auto">
<thead>
<tr><td class="invisible"></td><td colspan="2">non-empty string</td><td colspan="2">empty string</td></tr>
<tr><td class="invisible"></td><td>$R-</td><td>$R+</td><td>$R-</td><td>$R+</td></tr>
</thead>
<tbody>
<tr><td style="text-align:left">pchar(str)</td><td colspan="2">894 ms</td><td colspan="2">496 ms</td></tr>
<tr><td style="text-align:left">pchar(pointer(str))</td><td colspan="2">325 ms</td><td colspan="2">325 ms, but wrong result</td></tr>
<tr><td style="text-align:left">@str[1]</td><td>325 ms</td><td>4616 ms</td><td>325 ms, but wrong result</td><td>crash</td></tr>
</tbody>
</table>
</div>
<p>
This shows <code>pchar(pointer(str))</code> is more than twice as fast than <code>pchar(str)</code> in the more common use case of non-empty strings.</p>

<p>
And for completeness, also the <code>$R+ @s[1]</code> assembly:
<pre>
1    mov    rbx, <i>string variable</i>
2    mov    rdi,rbx
3    call   0x421668 &lt;fpc_ansistr_checkzero&gt;
4    mov    rsi,0x1
5    mov    rdi, <i>string variable</i>
6    call   0x421680 &lt;fpc_ansistr_checkrange&gt;
7    mov    <i>pchar variable</i>,rbx
</pre>

In all cases is possible to modify the resulting pchar, but if you do that you will modify all copies of the string (unless you call UniqueString before): 

<pre>
var s,t:string;
    p:pchar;
begin
    s:='Hallo'; 
    t:=s;
    p:=pchar(s); 
    p^:='h';
    assert(s='hallo');
    assert(t='hallo');
end.
</pre>

So only modify the pchar of an converted string if you created that string or have modified it before with string functions (so reference count = 1). </p>
</text>
        </new>
	<new date="2010-08-20">
          <text language="de">Langsam sterben alle Seiten weg, die ich im Internet kenne. Heute habe ich gemerkt, dass regexpstudio.com mit der TRegExpr-Klasse verschwunden ist, die früher als bester Delphi regexp-Parser galt. (die alten Delphiforen, in denen sie bewundert wurde, finde ich auch nicht mehr...) <br/> Da man die Klasse für meine Internettools braucht, gibt es hier jetzt einen <a href="sources_de.html#regexpr">TRegExpr-Mirror</a>.</text>
          <text language="en"> I just noticed that Andrey V. Sorokin's site regexpstudio.com does not exist anymore. His class TRegExpr was the best regular expression parser for Delphi and FPC. Because you need this class to use my internet tools, I  created a <a href="sources_en.html#regexpr">mirror of TRegExpr</a>.</text>
        </new>
	<new date="2010-08-10">
          <text language="de"> Und weiter geht es mit den SIRDSlets: Es gibt jetzt drei neue Level, Übersetzungen, Beschleuniger und Anaglyphenrendering. Die Beschleuniger sind wie schwarze Löcher, aber unabhängig von der Schiffsposition. Mit dem Anaglyphenrendering kann man es nun auch dreidimensional sehen, wenn man nicht schielen kann. Damit ist allerdings verwirrender, da die meisten 3D-Brillen eine miserabel Kanaltrennung haben. <br/>Und falls es jemand noch nicht mitgekriegt hat: Deolalikar hat einen Beweis für P!=NP mit graphischen Modellen, FO(LFP)-Logik und theoretischer Physik veröffentlicht. Wenn der Beweis stimmt, wurden drei der berühmtesten Probleme in nur fünfzehn Jahren gelöst, mal sehen, wann Riemann drankommt.</text>
          <text language="en"> A Sirdslets update is there: 3 new levels, translations, accelerators and anaglyph rendering. The accelerators are like black holes, but independent of the ship position. The anaglyph rendering creates red/cyan images which you can see with 3d glasses. But they are a little bit confusing because most 3d glasses have a very bad channel separation and you will see everything three times. <br/> And if you are interested in theoretical computer science and did not get the news: Deolalikar claims to have found a proof for P!=NP using a combination of graphical models, FO(LFP) logic and theoretical physics. If he is right, the third of the most famous problems is solved in just fifteen years (after Fermat and Poincaré), perhaps Riemann is going to be the next one. </text>
        </new>
	<new date="2010-05-28">
          <text language="de">  Heute habe ich mein neues <a auto="sirdslets">SIRDSlets Spiel</a> hochgeladen, dass eines der wenigen Spiele ist, die man in echtem 3D spielen/sehen kann. Es ist außerdem das erste Browserspiel auf dieser Seite und muss nicht wie die anderen explizit heruntergeladen werden. Allerdings ist es noch nicht ganz fertig, aber es ist schon seit Monaten spielbar und ich habe im Moment zu wenig Zeit, es zu vollenden. So fehlt zum Beispiel eine deutsche Übersetzung, mehr als sechs Level, und der Hardware-beschleunigte SIRDS-Renderer aus der vorherigen News (wobei es aber zweifelhaft ist, ob ich den jemals einbaue, da der Softwarerenderer schnell genug zu sein scheint, und es Applets nicht  leicht fällt OpenGL zu verwenden).</text>
          <text language="en"> Today I uploaded my new <a auto="sirdslets">SIRDSlets game</a> which is one of the few games that you can play/see in real 3d without additional 3d glasses. It is also the first online game on this page, so you can play it without downloading it explicitely. However, although it is playable, it is not completely finished, but it is in that state since months and I don't have much time in the moment. Some things that are missing are additional levels and the opengl renderer from the last news, so it only has six levels that are software rendered.   </text>
        </new>
          <new date="2010-02-16"><text language="de">
          Heute gibt es abermals ein <a href="tools_de.html#videlibri">Videlibri-Update</a>, das die unten erwähnten Probleme mit der  FHB Düsseldorf und den beiden Aachener Bibliotheken löst. Außerdem läuft es jetzt wieder unter Windows (und weiterhin unter Linux).<br/>
          Dazu habe ich auch meine  <a href="sources_de.html#internettools">Internettools</a> aktualisiert: Der Wininet-Wrapper unterstützt nun auch Cookies ohne Attribute und http-Verbindungen über andere Ports als 80. Außerdem gibt es ein globales Logging (was man insbesondere für https braucht). Die Parserklasse ist ebenfalls flexibler geworden und man kann in den Pseudo-XPath-Ausdrücken nun auch Regex-Filter vor dem Ausführen anderer Funktionen anwenden, statt nur nachträglich wie bisher. (echte XPath-Ausdrücke können es dagegen übrigens gar nicht)<br/>
          Zudem habe ich ein paar News ins Archiv und einige unfertige Tools auf die Demoseite verschoben. 
          </text><text language="en">
          There is a new update of my <a href="sources_en.html#internettools">Internettools</a>: It fixes two small bugs that prevented the receiving of cookies without attributes and the creation of http connections over the 8080 port. It also add a global logging which is especially useful for debugging https.  In the  parser class the pseudo-XPath-expressions can now extract regex-matching data during the evaluation of the expression instead only afterwards like before. (real XPath-expressions does not support it at all) <br/>
         Furthermore, some news have been moved in the archive and some uncompleted tools on the demo page.
          </text></new>
          <new date="2010-02-07"><text language="de">
          Ab jetzt gibt es eine extra <a href="demos_de.html">Demo-Unterseite</a> für kleine Programme, die eigentlich nutzlos sind, aber interessante Techniken oder hübsche Filme zeigen. Dazu habe ich zum einen ein paar Programme verschoben, zum anderen gibt es zwei neue, die ich an der Uni aus den Übungsprogrammen der VR- und Computergrafikvorlesungen programmiert habe. <br/>
          Beide zeigen eine echte 3D-Darstellung, das eine rendert hardware beschleunigte <a href="demos_de.html#sirdsgl">Single Image (Random Dot) Stereograms</a>, also Bilder, in denen man ein 3D-Bild durch Schielen sehen kann. Das andere <a href="demos_de.html#webcamucp">"Webcam-UCP"</a> Programm verwendet die klassische rot/cyan-Trennung, um Bilder für 3D-Brillen zu erstellen. Zusätzlich wird aber mittels einer Webcam, die Brillenposition getrackt und die Szene betrachterzentriert gerendert.<br/>
          Außerdem funktioniert in Videlibri jetzt wieder die StB Aachen (FHB Düsseldorf vermutlich auch), ich lade die neue Version aber erst hoch, wenn ich die FHB noch getestet habe, da es ja sowieso niemand nutzt.
          </text><text language="en">
          There is now a new <a href="demos_en.html">demo page</a> listing small program which are useless but demonstrate interesting techniques or show nice films. <br/>
          Aside from some recategorizated old programs, there are two new ones on this page, both based on lecture exercises and rendering real 3d. The first draws hardware accelerated <a href="demos_en.html#sirdsgl">Single Image (Random Dot) Stereograms</a>. SIRDS are flat pictures containing a 3d scene which you can only see by squinting.  The other <a href="demos_en.html#webcamucp">"Webcam-UCP"</a> program creates  traditional red/cyan anaglyphs. Furthermore it tracks the position of the 3d glasses via a webcam and renders the scene in user centered projection.<br/>
          </text></new>
          <new date="2010-01-27"><text language="de">
          Von VideLibri gibt es nun eine neue Version, die auch die Hochschulbibliothekk der RWTH Aachen unterstützt und vollständig Linux-kompatible ist, inklusive Menüeinträge und integrierte Autostartkonfiguration.  <br/>
          Nun die schlechten Nachrichten: Bei der BTH Aachen gibt es noch keine integrierte Verlängerung, da man nicht gleich nach einer  Ausleihe verlängern darf, und ich somit weiß  nicht feststellen kann, wie es funktioniert. Außerden haben alle Libero-Büchereien mal wieder eine neue Software installiert. Das heißt:<br/>
          Sowohl die Aachener Stadtbibliothek wie auch die FHB Düsseldorf gehen vermutlich nicht mehr. Testen kann ich es nicht, weil ich momentan nicht in die Bibliothek kann. (und genau DAS ist der Grund, warum mal endlich jemand die Software benutzen sollte. Wenn mich jemand darauf hinweist und die neue Seite per Mail schickt, kann ich solche Fehler nämlich in einer Viertelstunde beseitigen, statt in zwei Wochen!)   <br/>
          Zumindest in der alten Windowsversion funktionieren die beiden definitiv nicht (Stb Aachen war da nie drin und die FHB ist umgezogen). Sollten sie in der Linuxversion funktionieren,  kann man aber einfach die Dateien der Linuxversion in das Installationverzeichnis in Windows kopieren, dann läuft es dort genauso gut/schlecht. <br/> 
          Zudem habe ich die FHB Bochum gestrichen, da sie nicht mehr unter ihrer alten Internetadresse zu finden ist, ich die neue nirgends finden kann und sie sowieso nur im Programm war, weil sie einen gemeinsamen Server mit der FHB Düsseldorf hatte.<br/>
         
          </text></new>
          <new date="2010-01-06"><text language="de">
          So jetzt gibt es eine neue Version von allen in der letzten News erwähnten Paketen, hauptsächlich, weil ich vergessen hatte, die Unittest auszuschalten. Beim TreeListView gab es noch einige andere Änderungen: Beim horizontalen Scrollen flackert es nicht mehr unter GTK (früher hat es das auch nicht, aber bei der Änderung letzter Woche gab es wohl irgendwelche Kompatibilitätsprobleme) und die Icons im Baum werden nun geclippt, wenn die Spalte zu klein ist. <br/>
          Außerdem gibt es jetzt eine neue Version von meinem Büchereiverwaltungsprogramm <a href="tools_de.html#videlibri">Videlibri</a> (das übrigens auf allen diesen anderen Paketen basiert). Zur Abwechslung setzt es diesmal nicht Windows sondern Debian 64-Bit voraus und kann auch die Bücher der Aachener Stadtbibliothek verwalten. Die Windowsversion kommt später, wenn ich sichergestellt habe, dass das Crosscompiling zuverlässig funktioniert. Das Programm verwendet allerdings immer noch ein Windowsverzeichnislayout (alle Dateien in einem Programmordner statt wie unter Linux üblich überall verstreut) und der Autostart muss manuell unter der gnome/KDE-Konfiguration eingetragen werden (videlibri-Pfad mit --autostart als Parameter), wenn man die Autostartfunktionalität benutzen will. 
          </text><text language="en">
          There are some minor changes in all the packets below, mostly I forgot to disable the unittests (and you probably don't want to have test log results everywhere). And the TreeListView won't flicker anymore on gtk when you scroll horizontally (I'm pretty sure that it also didn't flicker when I uploaded the last version...) and icons in the item tree will be clipped if the column is too short.
          </text></new>
	  <new date="2009-12-31"><text language="de">
           Und weiter geht's. Ich habe jetzt drei der bisherigen Packages mit HTML-Templateparser, Autoupdate und Wininetwrapper zu einem  <a href="sources_de.html#internettools">Internet Tools</a>-Package zusammengefügt und platform-unabhängig gemacht (der Hauptunterschied ist, dass der Wininetwrapper nun auch Synapse unterstützt). Das Package benötigt/enthält auch meine <a href="sources_de.html#bbutils">bbutils</a>, bei denen ich noch einen Absturz unter 64-Bit beseitigt habe (und vermutlich seit dem letzten Release auch einige Funktionen umbenannt). <br/>  
           Außerdem gibt es jetzt für alle der geänderten Pascalkomponenten eine <a href="documentation/">Onlinedokumentation</a>, für die ich einfach nur die sowieso in den zip-Dateien vorhandenen pasdoc-Dateien unkomprimiert hochgeladen habe.
          </text><text language="en">
           And more updates: I merged the three packages with the template based html parser, the auto update and my Wininetwrapper into an  <a href="sources_en.html#internettools">Internet Tools</a>-Package and made them platform-independent. (the main change is that the wininet wrapper is now also a Synapse wrapper). This new package requires/contains now my <a href="sources_en.html#bbutils">bbutils</a> in which I fixed a crash on 64-Bit.  (and probably renamed some functions since the last published version). <br/>  
           Furthermore I uploaded the pasdoc documentation from every (changed so far) package as <a href="documentation/">online documentation</a> and  every  archive  has now  a common structure. The root level of the zip contains a single directory named like the zip itself, which contains the data files, the changelog from Mercurial and, if available, the pasdoc documentation for that archive.
          </text></new>
	  <new date="2009-12-28"><text language="de">
		So nun bin ich von Windows 32-Bit auf Linux 64-Bit gewechselt, und jetzt geht das große Updaten los. Die alten Programme dieser Seite waren zwar theoretisch schon alle platform-unabhängig, praktisch gab es aber noch einige Macken.<br/>
		Mein <a auto="treelistview">TreeListView</a> läuft in der neuen Version unter LCL-GTK sehr viel schneller/flüssiger als früher, da mehrere Benutzereingaben hintereinander zusammengefasst angezeigt werden (wobei es eigentlich ein gemeldeter LCL-Bug ist, dass so viele  überflüssige  Nachrichten überhaupt weitergeleitet werden), außerdem kann jetzt in jedem Item ein Datenwert mit 64-Bit gespeichert werden und die Komponente steht in einem Designzeitpackage zur Verfügung. Die dazugehörige <a href="components_de.html#searchbar">Suchleiste</a> passt sich nun der Schriftgröße an und hat ebenfalls ein Package bekommen. Zudem kann mein  <a href="tools_de.html#jaxmlp">JAXML-Parser</a> jetzt auch Dateien mit unterschiedlichen Zeichensätzen erstellen und die \\-Form funktioniert wieder richtig.
	  </text><text language="en">
	      So now I switched from Windows 32 bit to Linux 64 bit and need to update all the programs here which were theoretically platform-independent, but apparently didn't really work there.<br/>
The  <a auto="treelistview">TreeListView</a> is now a lot faster in LCL-GTK, because it will cache subsequent input events and draw all changes at once (actually it is a reported lcl bug that there are so many unnecessary events, but joining them is better anyways), and  in every item you can now store a 64 bit value instead of a 32-bit value like before. I also changed the included <a href="components_en.html#searchbar">SearchBar</a> to set its size dependent on the currently used font. For both these components I created a Delphi and a Lazarus package, so you can place them on the form during the design time.  Furthermore my  <a href="tools_en.html#jaxmlp">JAXML parser</a> can now create files in different encodings and  \\-escaping works again (it seems I forgot to actually run the unit tests on the last release). 
	  </text></new>
	  <new date="2009-10-05"><text language="de">
		Ich habe jetzt mal meine <a auto="bachelor">Bachelorarbeit</a> hochgeladen. Im Wesentlichen geht es darum, wie man aus mehreren gegebenen, sortierten Listen von gleichen Ereignissen herausfinden kann, welches dieselben sind. 
	  </text></new>
	  <new date="2009-09-16"><text language="de">
		Diese Woche habe ich meine Bachelorarbeit/prüfung abgelegt, so dass ich mich wieder etwas um meine Homepage kümmern kann. <br/>
		Heute gibt es ein neues Java-Script, mit dem man das <a auto="gaussElimination">gaußsche Eliminationsverfahren</a> auf eine Matrix anwenden kann. Es gibt zwar schon hunderte solche Programme im Internet, aber alle, die ich finden konnte, waren für mein Gleichungssystem unbrauchbar, da sie verlangen, dass die Matrix quadratisch ist und Elemente eines Körpers statt eines Ringes enthält.<br/>  Übrigens ist interessante Tatsache, die ich bei der Implementierung festgestellt habe, dass man den euklidischen Algorithmus zur ggT-Berechnung als Spezialfall des gaußschen Eliminationsverfahren auf einer 2x1-Matrix der natürlichen Zahlen betrachten kann.
	  </text><text language="en">
		This week I finished and presented my bachelor thesis, so that I have now enough time to update this home page. <br/>
		Today I added a java script that you can use to perform a <a auto="gaussElimination">Gaussian Elimination</a> on a given matrix. Of course, there are already hundreds of such scripts online, but all of those I found, didn't work for the equations I wanted to solve, because they assumed that the matrix is quadratic and contains elements of a field instead of a ring. And most of them don't let you choose the order in which the operations are performed or allow neither import nor export of data. The only problem with my script is that java script is always a little bit slow, but anyways you don't  solve  equations with dozen variables step-by-step. And it seems that no one  downloads anything in the web2.0 era.<br/>
		An interesting fact I noticed while implementing this is that you can consider the Euclidean algorithm for finding the gcd as a special case of the Gaussian Elimination on a 2x1-matrix of integers.
	  </text></new>
	  <new date="2009-04-15"><text language="de">
	     Es gibt nun wieder ein neues Programm: Einen <a href="tools_de.html#sunsimulator">Sonnensimulator</a>, der die Helligkeit und den Farbton des Monitors zeitlich ändert, so dass dessen Licht dem Sonnenlicht entspricht.<br/>
		 Außerdem habe ich dafür eine <a href="sources_de.html#diagram">Diagrammkomponente</a> geschrieben, die Gleitkommazahlen-Reihen unterschiedlich darstellen kann. Sie benutzt ein Model/View-System (da ich mich viel mit QT beschäftigt habe), das im ersten Moment ziemlich verblüffend wirkt. Z.B.: Kann man in zwei unterschiedlichen Fenstern immer dieselben Punkte synchronisiert anzeigen und in einem noch eine weitere Reihe hinzufügen.
      </text><text language="en">
	     There is now a new program: <a href="tools_en.html#sunsimulator">Sun-Simulator</a> which changes the brightness and shade of color of the monitor during the day and year, so that its light matches the sunlight.<br/>
		 Additional I wrote a <a href="sources_en.html#diagram">diagram component</a> for Lazarus which shows float points in multiple ways. It is based on a model/view system (because I use qt a lot at the moment) which can be used to create interesting effects very easily. E.g.: you can synchronize the data points across different windows and add some other points in one of them at the same time.
      </text></new>    
	  <new date="2009-04-09"><text language="de">
	     Ein Problem, wenn man Opensource-Software schreibt ist, dass man häufig Patches erhält, die ziemlich unbrauchbar sind, weil sie zu 95% aus Whitspaceänderungen bestehen. Daher habe ich ein (unter Linux und Windows laufendes) <a href="tools_de.html#simplifydiff">Kommandozeilentool namens Simplifydiff</a> geschrieben, welches alle unnötigen Daten entfernt.<br/>
         Außerdem werden ab jetzt alle Gästebucheintrag, welche von der Heuristik als Spam erkannt werden <em>ohne Backup</em> gelöscht. Bisher habe ich zur Sicherheit immer noch eine Kopie per Mail erhalten, aber da unter den letzten tausend Einträgen sowieso kein echter Beitrag war, ist das wohl unnötig. (Ebenfalls unnötig sind übrigens die Spameinträge, das Gästebuch hat nämlich schon immer noindex, nofollow gesetzt!)
      </text><text language="en">
	     A problem with writing open-source software is that you often receive patches which are completely useless, because they consists to 95 percent of changed whitespace. Therefore I wrote the command line tool <a href="tools_en.html#simplifydiff">Simplifydiff</a> that removes all unnecessary data.<br/>
         And all entries in the guestbook which are spam according to the heuristic are now removed <em>without a backup</em>. So far  I received a copy as mail, but since the last thousand entries were really spam, this seems to be useless.  (Actually the spam entries are also completely useless, because the guestbook has set the flags noindex, nofollow since the beginning!)
      </text></new>    
      <new date="2009-03-01"><text language="de">
         Vor einiger Zeit habe ich angefangen Texte und ein Buch mit LaTeX zu schreiben und habe dafür den Editor Texmaker genommen, da es der einzige platform-unabhängige, open-source Editor war, den ich finde konnte. Da der einige Fehler enthält, habe ich in einige kleine Patch erstellt, die dann immer größer wurden, bis sie schließlich zu dem Fork <a href="http://texmakerx.sourceforge.net">TexMakerX</a> (auf Sourceforge) geführt haben. Zu den wichtigsten Feature, die ich hinzugefügt habe, gehört interaktive Rechtschreibprüfung, Codefaltung und eine Textanalyse.<br/>
         Auf dieser Seite hier habe ich dagegen nur den Übersichtstext unten mal wieder aktualisiert und, dank eines Versionskontrollsystems, das Datum der Newsnachricht vor dieser richtig gestellt. (da stand nämlich noch 18. Okt) (Korrektur: Das VCS lag falsch, aber glücklicherweise hatte ich noch mein CMS)
      </text><text language="en">
        Some time ago I started to write texts and even a book in LaTeX. Therefore I searched a platform-independent, open-source editor, and found only Texmaker. <br/>
        But since he has some bugs, I created some small patches, which got bigger and bigger, until they finally lead to the fork <a href="http://texmakerx.sourceforge.net">TexMakerX</a> (on Sourceforge). The most important features I added are, interactive spell checking, code folding and a text analysis.<br/>
         On this web page I only updated the overview text below and corrected the date of the last news from 18.Okt to 27.Nov. (version control systems are really useful...) (correction: The date of the VCS was wrong, but my CMS got it right).
      </text></new>    
  </news>
  <final-content language="de">
  <a href="oldnews_de.html">Ältere Neurigkeiten...</a>
  
  <br/><br/><h2>Übersicht</h2>
  <br/>
  Auf dieser Seite kann man einige von mir programmierte Spiele und Tools herunterladen. <br/>
  Zudem gibt es nützliche Quellcodes und Komponenten, vorwiegend für Delphi und FreePascal. <br/>
  <br/>
  Ein paar Informationen über mich: Ich programmiere, seit ich acht bin (weshalb viele der Downloads auf dieser Seite sehr alt sind), mittlerweile bin ich 20 und studiere Informatik an der Heinrich-Heine-Universität Düsseldorf.(Stand 2009)<br/>
  Ich habe mehrmals am Bundeswettbewerb Informatik teilgenommen, wo ich Preisträger und Bundessieger wurde, außerdem war ich im deutschen Team bei mehreren internationalen Informatikolympiaden (auch bei <em>der</em> International Olympiad of Informatics)  und habe dort (leider nicht bei der) auch einige Medaillen gewonnen.<br/>
  <br/>
Es wäre schön, wenn ihr ins <a href="koobtseug_de.php">Gästebuch</a> schreibt wie euch diese Seite und die Programme hier gefallen haben. Bei sonstigen Fragen könnte ihr mir auch gerne <a href="impressum_de.html#top">eine Mail</a> schreiben.
<div style="text-align:center; margin-top: 2em;">
  <img src="img/maus.gif" alt="Maus mit Käse" width="182" height="132"/>
</div>
</final-content>
<final-content language="en">
  <a href="oldnews_en.html">Older news...</a><br/><br/>
<br/>
<h2>Overview</h2>
  <br/>
  On this page you can download some games and tools I wrote. <br/>
  There are also useful sources and components, mainly for Delphi and Free Pascal. <br/>
  <br/>
  Some information about me: I have programmed since I was twelve (that's why there are so many old downloads here), now I am 19 and study computer science at the Heinrich-Heine-Universität Düsseldorf. (2009)<br/>
  I won several prices in the German national informatics competition and participated in different European and International Olympiads of Informatics. In the European ones I also won some medals. <br/>
  <br/>
Here is a <a href="koobtseug_en.php">guestbook</a> where you can tell me if you like or dislike something on this page. If you have any questions or suggestions you can also write me <a href="impressum_en.html#top">a mail</a>.

<div style="text-align:center; margin-top: 2em;">
  <img src="img/maus.gif" alt="mousing eating cheese" width="182" height="132"/>
</div>
<br/><br/><br/><br/></final-content>
</file>