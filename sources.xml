<file>
  <description language="de">Auf dieser Seite gibt es verschiedene Quellcodes: einen Non VCL Canvas, TCVirus, einen Huffmankomprimierer, einen Kommandozeilenparser, eine AutoUpdate-Unit und einen Browser.</description>
  <description language="en">You can find these sources here: a non VCL canvas, TCVirus, a Huffman compressor, a command line parser, a browser and a automatic update unit.</description>
  <keywords language="de">Delphi, non VCL Canvas, TCVirus, Huffman, Komprimierung, Units, Komponenten, Kommandozeile, Parser, Browser, automatisches Update</keywords>
  <keywords language="en">Delphi, Non VCL Canvas, TCVirus, Huffman, compression, Units, components, auto update, browser, command line reader, parser</keywords>
  <content language="de"><![CDATA[Auf dieser Seite sind Quellcodes, die man in eigenen Projekten benutzten kann, aufgelistet, <a href="components_de.html#top">Delphikomponenten</a> sind jedoch auf einer eigenen Seite zu finden. Alle mit der MPL-Lizenz, GPL-Lizenz oder BSD-Lizenz versehenen Quellcodes dürfen beliebig verändert und vertrieben werden. <br>Bei der MPL und GPL müssen aber Änderungen veröffentlicht werden und bleiben unter der MPL lizenziert, bei der GPL gilt dies auch für Erweiterungen.<br>Steht eine Datei unter mehreren Lizenzen, darf man eine davon wählen.<br> Genauere und rechtskräftige Informationen sollten den Dateien bei liegen.<br>Braucht jemand unbedingt eine andere Lizenz, kann er mir eine E-Mail schicken.]]></content>
  <content language="en"><![CDATA[You can find all my published sources usable in your projects. Only <a href="components_en.html#top">components</a> for Delphi are on another page. All sources published under the terms of the MPL-, GPL- or BSD-License can you change and distribute in any way you want. <br>But in case of MPL or GPL you must publish changes and you mustn't change the license. In case of GPL you must also publish extensions and the source of every program (from you) using it under the terms of the GPL.<br>Is any of the files published under the terms of more than one license, you can choose one of them. <br> You can find more and legally valid information in the source files.]]></content>
  <download-dir>bin/sources</download-dir>
  <download> 
    <title>Internet Tools</title>
    <link type="onlinedocu"/>
    <file>internettools.zip</file>
    <id>internettools</id>
    <description_80 language="de">Ein vollständiger XPath 2/XQuery/JSONiq-Interpreter, ein Pattern-Matcher für HTML/XML-Templates, eine Autoupdate-Klasse und einen HTTP-Verbindungswrapper</description_80>
    <description_80 language="en">Containing a full XPath 2/XQuery/JSONiq engine, a pattern matcher for html/xml, an auto update class and a http connection wrapper.</description_80>
    <prog-language>FPC</prog-language>
    <source-license>GPL</source-license>
    <content language="de">Dieses Package enthält folgende Module: <br/><br/> 
        <ul class="indentation-list">
        <li>Einen <em>simplen HTML Parser</em>, der eine HTML/XML-Datei parst und für jeden gelesen Tag und Text eine entsprechende Callbackfunktion aufruft.</li>
        <li>Einen <em>HTML Tree Parser</em>, der den einfachen Parser verwendet, um eine HTML/XML-Datei zu lesen und in einen Elementstream umzuwandeln, der sich wie ein DOM-Baum verhält. Dabei werden zudem Fehler in der HTML-Datei wie nicht geschlossene Tags korrigiert und die Zeichenkodierung ermittelt.</li>
        <li>Einen <em>XPath 2 / XQuery Interpreter</em>, der beliebige XPath 2 / XQuery Ausdrücke über dem DOM-ähnlichen Baum ausführen kann. Er ist vollständig in Pascal implementiert, unterstützt alle XPath 2 Funktionen/Ausdrücke und ist nahezu standardkompatibel (vergleiche seine <a href="documentation/internettools/internettoolsxqts.html">Ergebnisse der vollständigen XQuery Testsuite</a> oder beschränkt auf <a href="documentation/internettools/internettoolsxqts_path.html">XPath 2</a>). Er unterstützt auch JSONiq.</li>
        <li>Ein Parser für <em>CSS 3 Selectors</em>, der in die XQuery Klasse eingebaut ist, der CSS Selektoren in XPath 2-Ausdrücke umwandeln, und diese dann ausführt.</li>
        <li>Eine <em>pattern-matching HTML Templateengine</em>, die ein HTML Template auf eine Seite anwendet. Ein solches HTML-Template ist eine vereinfachte Version der zu verarbeitenden Seite. Die Struktur des Templates wird mit der Struktur der Seite verglichen, und jedes Template-Element wird mit einem übereinstimmenden Seiten-Element verknüpft, welches dieselben Eigenschaften und ähnliche Kinder aufweist. Die in den Template-Elementen enthaltenden Annotationen können dann die Werte der entsprechenden Seiten-Elemente auslesen.  Zum Beispiel ein Template wie
        <pre>&lt;a>{@href}&lt;/a>*</pre>
        liest die Addressen aller Links auf einer HTML Seite.<br/>
        Ein Template wie 
        <pre>&lt;table id="foobar">&lt;tr>&lt;td>abc&lt;/td>&lt;td>{.}&lt;/td>*&lt;/tr>*&lt;/table></pre>
         liest alle Tabellenzellen nach der Zelle mit dem Text abc in der Tabelle mit ID foobar.
        Und schließlich ein Template wie
        <pre>&lt;table id="foobar">&lt;tr>{temp := 0}&lt;td>abc&lt;/td>&lt;td>{temp := $temp + .}&lt;/td>*{result := $temp}&lt;/tr>*&lt;/table></pre>
        berechnet die Summe aller Tabellenzellen nach der abc-Zelle für alle Zeilen.<br/>Diese Templates lassen sich auch <a href ="http://videlibri.sourceforge.net/cgi-bin/xidelcgi"> online</a> or with <a href="http://videlibri.sourceforge.net/xidel.html">Xidel</a> ausprobieren.</li>
        <li>Die <em>multi page Templateengine</em> speichert in ihren Templates mehrere Einzelseitentemplates, die nacheinander auf die angegebenen Seiten angewandt werden. Im Gegensatz zu den Einzelseitentemplates führt diese Engine kein pattern-matching durch (außer natürlich dem pattern-matching mit den enthaltenen Einzelseitentemplates zu den heruntergeladenen Seiten), sondern führt alle Aktionen in der angegebenen Reihenfolge durch. Dabei werden auch Variablen, Bedingungen und Schleifen unterstützt, so dass sie Turing vollständig ist.</li>
        <li>Der <em>HTTP/S-Verbindungswrapper</em> kann Seiten mit beliebigen HTTP-Methoden (z.B.: GET/POST) herunterladen und kümmert sich automatisch um Cookies und Weiterleitungen. Außerdem kann er dynamisch zwischen Wininet (auf allen Windowscomputern vorhanden), Synapse (plattform-unabhängig, muss aber installiert werden) und Apache HttpComponents (alter Standard für Android) umschalten.</li>
        <li>Die <em>Autoupdateklasse</em> ist ein Trivialbeispiel für die anderen Klassen, und kann automatisch ein Update herunterladen und installieren.
        </li>
        </ul>
        <br/><br/>Stichpunktübersicht der Features:<br/><br/></content>

    <content language="en">This package consists of several units working together: <br/><br/> 
    <ul class="indentation-list">
    <li>The <em>simple html parser</em> at the lowest level, parses a xml/html file and calls callback functions for every tag and text it has read.</li>
    <li>The <em>html tree parser</em>, uses the simpler parser to read an xml/html file and create a linked element-stream from it, which is equivalent to a dom-like tree. This parser takes much care to make the tree usable, e.g. by correcting errors in invalid html files and auto detecting its encoding.</li>
    <li>With the <em>XPath 2 / XQuery engine</em> you can then run arbitrary XPath 2 / XQuery queries on the dom-like representation. It is completely implemented in Pascal, supports all XPath 2 / XQuery functions and is  nearly standard compatible. (compare its <a href="documentation/internettools/internettoolsxqts.html">XQuery Testsuite results</a> or the results on the <a href="documentation/internettools/internettoolsxqts_path.html">XPath 2 subset</a>). It also supports JSONiq.</li>
    <li>The parser for <em>CSS 3 selectors</em> is part of then XQuery class, converts the CSS selector to a XPath expression and evaluates that.</li>
    <li>The <em>pattern-matching html template engine</em> at the highest level, can be used to process an html file by annotating a subset of it and applying the resulting template to the html file.  All elements in the template are searched in the html file and template instructions in matching elements can be used to extract data. For example a template like 
    <pre>&lt;a>{@href}&lt;/a>*</pre>
    will read the urls of all links in a html file.<br/>
    A template like this:
    <pre>&lt;table id="foobar">&lt;tr>&lt;td>abc&lt;/td>&lt;td>{.}&lt;/td>*&lt;/tr>*&lt;/table></pre>
     will read all table cells after the cell containing abc in all rows of the table with id foobar.
    And a template like this:
    <pre>&lt;table id="foobar">&lt;tr>{temp := 0}&lt;td>abc&lt;/td>&lt;td>{temp := $temp + .}&lt;/td>*{result := $temp}&lt;/tr>*&lt;/table></pre>
    will calculate the sum of all table cells after the abc cell in all rows.<br/>You can also try these templates <a href ="http://videlibri.sourceforge.net/cgi-bin/xidelcgi"> online</a> or with <a href="http://videlibri.sourceforge.net/xidel.html">Xidel</a>.</li>
    <li>The <em>multi page template engine</em> can be used to download several pages, and apply a single-page template to each of them. Contrary to the single-page template it does not do any pattern matching itself (of course the single-page templates contained in a multi-page template do pattern matching against each page), but simply executes the actions in the order given in the template. It also supports variables, condition and loops, so it is even Turing complete.</li>
    <li>The <em>http/s-wrapper</em> let you switch dynamically between Wininet (default library installed on every Windows computer), Synapse (platform-independent,  but not always installed and problematic with https) and Apache HttpComponents (called through JNI and runs on Android).</li>
    <li>The <em>auto update</em> class is a trivial example for the other classes and can be used to add an auto update function to a program which will check online for a more recent version, download that version automatically and (optionally) install it. </li>
    </ul>
    <br/><br/>Summary of features:<br/><br/>
    </content>
    <features language="de">
      <feature><title>Parser/Interpreter:</title>
      <feature2>für xml/html Seiten, über ein sax und dom-ähnliches Interface</feature2>
      <feature2><title>für XPath 2 / XQuery Ausdrücke</title>
      <feature3>nahezu vollständig standardkompatibel: besteht 99.3% der XPath 2 Tests und 97.8% der XQuery 1 Tests in der XQuery Testsuite<br/> (unter Auslassung der Tests für ungültige Eingaben; die meisten fehlschlagenden Tests und XML Schemas, welche noch nicht unterstützt werden  )</feature3>
      <feature3>Plus Erweiterungen für OOP, CSS, Regexps, pattern-matching und JSONiq.</feature3>
      </feature2>
      <feature2><title>für CSS 3 Selektoren</title>
      <feature3>standardkompatibel (afaik, nicht viel getestet)</feature3>
      <feature3>standalone oder innerhalb eines XPath Ausdrucks: <code>//foobar/css("p#x a.class")/@href</code></feature3>
      </feature2>
      <feature2><title>für pattern-matching html/xml Templates:</title>
        <feature3>Templates lassen sich einfach aus einer html-Datei erstellen und später updaten </feature3>
        <feature3>Die Sprache kann reguläre, XPath 2 / XQuery and CSS 3 Selektor Ausdrücke einbinden</feature3>
        <feature3>Es gibt Variablen, optionale Elemente, Schleifen und Bedingungen</feature3>
        <feature3>z.B.: <code>&lt;p class="test">&lt;span>Caption:&lt;/span>&lt;a>{.}&lt;/a>*&lt;/p></code> liest alle Links nach einem <code>span</code>-Element mit Text <code>Caption:</code> innerhalb eines Paragraphens mit Klasse <code>test</code></feature3>
      </feature2>
      <feature2><title>für multi-page Templates</title>
      <feature3>Mehrere pattern-matching Templates zusammen, die nacheinander auf unterschiedliche Seiten angewandt werden.</feature3>
      <feature3>unterstützt Variablen, Bedingungen und Schleifen => Turing vollständig</feature3>
      </feature2>
      </feature>
      <feature><title>HTTP/S-Wrapper:</title>
      <feature2>Übertragungen über http und https mit Fortschrittsanzeige </feature2>
      <feature2>Beliebige HTTP-Methoden, z.B.: GET, POST, PUT, ...</feature2>
      <feature2><title>Unterstützte Plattformen:</title>
      <feature3>Windows: via wininet</feature3>
      <feature3>Android: via JNI-Aufruf der Apache HttpComponents</feature3>
      <feature3>Andere (Linux, Mac): via dem plattform unabhängigen Synapse</feature3> </feature2>
      <feature2>Unterstützung für http, https und socks-Proxy (nicht auf Android)</feature2>
      </feature>
      <feature><title>Auto update:</title>
      <feature2>Verwendet ein XML-Format, um auf dem Server die aktuelle Version und das Changelog zu speichern. </feature2>
      <feature2>Erlaubt unterschiedliche Updates für 32/64-bit Linux/Windows und BSD-Platformen  </feature2>
      <feature2>Überprüft, ob es eine neue Version gibt, indem nur eine kleine Datei (statt dem Changelog) heruntergeladen wird </feature2>
      <feature2>Erlaubt das Ausführen des heruntergeladenen Installers mit beliebigen Kommandozeilenparametern </feature2>
      </feature>
    </features>
    <features language="en">
      <feature><title>Parsers/interpreters:</title>
      <feature2>for xml/html files, with a sax or dom-like interface</feature2>
      <feature2><title>for XPath 2 / XQuery expressions</title>
      <feature3>nearly completely standard compatible: passes 99.3% of the XPath 2 only tests and 97.8% of the XQuery 1 tests in the XQuery Testsuite <br/> (skipping tests for invalid input queries; most failing tests depend on xml schemas which are not supported, yet)</feature3>
      <feature3>Some extension for objects, css, regular expressions, pattern matching and JSONiq</feature3>
      </feature2>
      <feature2><title>for CSS 3 Selectors</title>
      <feature3>standard compatible (afaik)</feature3>
      <feature3>standalone or within XPath queries <code>//foobar/css("p#x a.class")/@href</code></feature3>
      </feature2>
      <feature2><title>for pattern-matching html/xml templates:</title>
        <feature3>Templates can be easily created/updated from the existing html file</feature3>
        <feature3>The template languages allows the inclusion of regular, XPath 2 / XQuery and CSS 3 Selectors expressions</feature3>
        <feature3>The language has variables, optional elements, loops and conditions</feature3>
        <feature3>e.g. <code>&lt;p class="test">&lt;span>Caption:&lt;/span>&lt;a>{.}&lt;/a>*&lt;/p></code> will read all links after the <code>span</code>-element containing <code>Caption:</code> in a paragraph with class <code>test</code></feature3>
      </feature2>
      <feature2><title>for multi-page "scraping" templates</title>
      <feature3>A collection of pattern-matching template to apply to several webpages</feature3>
      <feature3>has variables, conditions and loops => Turing complete</feature3>
      </feature2>
      </feature>
      <feature><title>HTTP/S-Wrapper:</title>
      <feature2>Can be used for transmissions over http and https</feature2>
      <feature2>Allows arbitrary http methods, e.g. GET, POST, PUT, ...</feature2>
      <feature2><title>Supported platforms:</title>
            <feature3>Windows: using wininet with the standard system configuration</feature3>
            <feature3>Android: using the Apache HttpComponents through JNI</feature3>
            <feature3>Others (Linux, Mac): using the platform-independent Synapse</feature3> </feature2>
      <feature2>Supports http, https and socks-Proxy (not on Android)</feature2>
      </feature>
      <feature><title>Auto update:</title>
      <feature2>Uses a xml format to store the most recent version and a changelog on the server.</feature2>
      <feature2>Supports different updates for 32/64-bit platforms and linux,Windows or BSD systems </feature2>
      <feature2>Checks if a new version is available without downloading the whole, large changelog</feature2>
      <feature2>Allows the execution of an arbitrary command line after the update, runas administrator if necessary</feature2>
      </feature>
    </features>
    <final-content>
    <a href="https://sourceforge.net/p/videlibri/code/ci/tip/tree/">Mercurial repository</a>
    </final-content>
  </download>
  
  
  
  <download> 
    <title>Farbauswahldialog</title>
    <file>farbe.zip</file>
    <id>farbe</id>
    <description_80 language="de">Ein Farbauswahldialog mit RGB- und HLS-Auswahlmöglichkeiten</description_80>
    <description_80 language="en">A color select dialog with hls- and rgb-mode.</description_80>
    <prog-language>Delphi</prog-language>
    <source-license>GPL</source-license>
    <content language="de">Dieser Farbauswahl ähnelt dem Windowsstandarddialog, bietet aber mehr Möglichkeiten:</content>
    <content language="en">This color select dialog is similar to the default one, but has more possibilities: </content>
    <features language="de">
      <feature>Es werden alle Komponenten von RGB und HLS angezeigt.</feature>
      <feature>Man kann in einem Farbverlauf eine beliebige Komponente von RGB/HLS ändern</feature>
      <feature>Diese Komponente wird sowohl in Abhängigkeit von den beiden anderen angezeigt wie auch unabhängig</feature>
      <feature>Die beiden anderen Komponenten können in einem 2D-Farbverlauf ausgewählt werden</feature>
      <feature>Dieser wird jeweils in Abhängigkeit der anderen Komponente angezeigt</feature>
      <feature>Zusätzlich kann man eine Liste von änderbaren Farben anzeigen</feature>
    </features>
    <features language="en">
      <feature>All components of rgb and hls are shown.</feature>
      <feature>You can change any component of rgb/hls in a color gradient</feature>
      <feature>This component is shown depending of the other two as well as independent</feature>
      <feature>You can change the other two components in a two-dimensional gradient</feature>
      <feature>This one is drawn depending on the first component</feature>
      <feature>Additional you can enable a list of colors to change</feature>
    </features>
    <screenshot>
      <title>example</title>
      <fullfile>img/sources/farbe.jpg</fullfile>
      <height>173px</height>
    </screenshot>
    <screenshot>
      <title>example</title>
      <fullfile>img/sources/farbe2.jpg</fullfile>
      <height>173px</height>
    </screenshot>
  </download>
  

  <download> 
    <title>TCommandLineReader</title>
    <link type="onlinedocu"/>
    <id>rcmdline</id>
    <file>rcmdline.zip</file>
    <description_80 language="de">Eine Unit zum Lesen von Kommandozeilenparametern</description_80>
    <description_80 language="en">An unit for the parsing of command line parameters</description_80>
    <prog-language>FPC, Delphi</prog-language>
    <source-license>GPL</source-license>
    <size_KB>8</size_KB>
    <content language="de">Dies ist ein Kommandozeilenparser, der sowohl mit Delphi wie auch mit Free Pascal funktioniert, sowie unter Windows und Linux.<br/>
    Vor der Abfrage von Parametern, müssen alle erlaubten Parameter deklariert werden. Dadurch kann vom Parser überprüft werden, dass der Benutzer nur erlaubte Parameter und nur richtige Parameterwerte (z.B.: Int vs. String) verwendet. Außerdem kann so bei Angabe eines falschen Parameters automatisch eine Hilfsliste aller unterstützenden Parameter angezeigt werden. Dies verhindert umgekehrt, dass es geheime, undokumentiere Optionen gibt.<br/>
    Es gibt drei verschiedene Versionen des Parsers, die ersten beiden lesen die Argumente von der Kommandozeile, und zeigen die Hilfe auf stdout bzw. in einer Messagebox an. Die dritte Version (nur fpc) läuft als CGI-Anwendung und nimmt die Argumente über http GET/POST-Anfragen entgegen.<br/><br/>
    Zum Vergleich sind hier die Ausgaben meiner Klasse und der Standard-Kommandozeilenfunktionen bei Aufruf des Programms mit den Parameter <code>'" a "'</code> :
    <table><tr><th>System</th><th>TCommandLineReader</th><th>ParamStr</th><th>string(cmdline)</th></tr>
    <tr><td>Windows (Delphi 4)</td><td class="yes"><code>" a "</code></td><td class="no"><code>' a '</code></td><td class="yesno"><code>"executable" '" a "'</code></td></tr>
    <tr><td>Windows (fpc 2.6)</td><td class="yes"><code>" a "</code></td><td class="no"><code>' a '</code></td><td class="yesno"><code>executable '" a "'</code></td></tr>
    <tr><td>Linux/bash (fpc 2.6)</td><td class="yes"><code>" a "</code></td><td class="yes"><code>" a "</code></td><td class="no"><code>executable "" a ""</code></td></tr>
    </table>
    <br/>
Die Features von rcmdline sind:<br/></content>
    <content language="en">This is a command line parser working with Delphi as well as with Free Pascal, and on Windows and Linux.<br/>
    Before you can read the command line arguments, all allowed arguments needs to be declared. So the parser can ensure that the user only uses allowed arguments and each given argument has the correct type (e.g. int or string). Furthermore, the parser can automatically generate a help summary displaying all allowed arguments with description. This again ensures that there are no hidden, undocumented command line arguments. <br/>
    There are three different versions of the parser. The first two read the arguments from the command line and show the help list of all allowed arguments on stdout or respectively in a message box. The third version (fpc only) runs as cgi service and reads the argument from get/post requests.<br/><br/>
Here is a nice comparison between TCommandLineReader and the standard pascal command line functions, when the program is called as <code>executable '" a "'</code>
 <table><tr><th>System</th><th>TCommandLineReader</th><th>ParamStr</th><th>string(cmdline)</th></tr>
    <tr><td>Windows (Delphi 4)</td><td class="yes"><code>" a "</code></td><td class="no"><code>' a '</code></td><td class="yesno"><code>"executable" '" a "'</code></td></tr>
    <tr><td>Windows (fpc 2.6)</td><td class="yes"><code>" a "</code></td><td class="no"><code>' a '</code></td><td class="yesno"><code>executable '" a "'</code></td></tr>
    <tr><td>Linux/bash (fpc 2.6)</td><td class="yes"><code>" a "</code></td><td class="yes"><code>" a "</code></td><td class="no"><code>executable "" a ""</code></td></tr>
    </table>
The feature list of rcmdline is:<br/><br/></content>
    <features language="de">
      <feature>Automatische Typumwandlung in den angegeben Typen</feature>
      <feature>Automatische Anzeige aller erlaubten Parameter</feature>
      <feature>Linux (<code>--xyz=bar</code> oder <code>-x bar</code>) und Windows (/) -styleparameter werden erkannt</feature>
      <feature>Verschiedene Eingabemöglichkeiten für Flags (<code>-f</code>, <code>--flag</code>, <code>--enable-flag</code>, <code>--disable-flag</code>)</feature>
      <feature>Einfache (') und doppelte (") Anführungszeichen werden erkannt (auch unter Windows)</feature>
      <feature>Existierende Dateien mit Leerzeichen im Namen auch ohne Verwendung von Anführungszeichen einlesbar</feature>
      <feature>Kann als CGI-Anwendung laufen und auf GET/POST-Anfragen antworten (nur fpc) </feature>      
      <feature>Parameter können von einem String (z.B.: cmdline) oder einem Array (z.B.: indirekt ParamStr) gelesen werden </feature>      
    </features>
    <features language="en">
      <feature>supports linux (<code>--xyz=bar</code> or <code>-x bar</code>) and windows (/) style parameters</feature>
      <feature>different input possibilities for boolean flags (<code>-f</code>, <code>--flag</code>, <code>--enable-flag</code>, <code>--disable-flag</code>)</feature>
      <feature>understands single (') and double (") quotation marks (even on Windows)</feature>
      <feature>type conversion of the string arguments to the declared types </feature>
      <feature>automatically user notification about wrong parameters</feature>
      <feature>existing files with names containing spaces can be parsed without quotation marks    </feature>
      <feature>can run as cgi service and answer to GET/POST requests (fpc only)</feature>
      <feature>Arguments can be read from: a simple string (e.g. cmdline) or an array of arguments (e.g. paramstr)</feature>
    </features>
</download>
  
  
  <download> 
    <title>Diagram-Tools</title>
    <file>diagram.zip</file>
    <id>diagram</id>
    <link type="onlinedocu"/>
    <description_80 language="de">Eine Diagrammkomponente, basierend auf einem Model/View-System</description_80>
    <description_80 language="en">A diagram component based on a model/view system.</description_80>
    <prog-language>FPC/Lazarus</prog-language>
    <source-license>GPL</source-license>
    <content language="de">Diese Unit zur Anzeige eines Diagrammes folgt einem ähnlichen Model/View-Konzept wie QT: Es gibt eine View-Komponente, welches die in einem Model gespeicherten Daten anzeigt und eine dazugehörige, abstrakte Modelklasse.&lt;br>
	Dies ist sehr viel flexibler als der traditionelle Weg, bei welchem die Daten der anzeigenden Komponente direkt zugeordnet sind.&lt;br>
	Features:</content>
    <content language="en">This diagram drawing unit follows a model/view concept like qt: There is a view component responsible for showing the data, and a model class storing them.&lt;br>
	This is much more flexible than the traditional way, where the data is handled within the viewing class.&lt;br>
	Features:</content>
    <features language="de">
      <feature>Model/View-Konzept mit automatische Synchronisation zwischen Views, welche identische Models zeigen</feature>
      <feature>Füllen mit horizontalem/vertikalen Farbverlauf und unterschiedliche Linien/Punktstyles</feature>
      <feature>Interpolation durch Geraden oder Splines möglich</feature>
      <feature>Die Diagrammwerte können je nach Einstellung vom Benutzer verändert werden</feature>
	  <feature>Mehrere mögliche Achsen und Punktreihen mit samt einer Legende für letztere</feature>
	  <feature>Automatische Bereichswahl, Verarbeitung von Fließkommawerten</feature>
	  <feature>Standardmodels, mit Punktlisten, zyklischen Listen und einem Model zur Verknüpfung anderer Modelle</feature>
      <feature>Es gibt eine Hilfedatei</feature>
    </features>
    <features language="en">
      <feature>Model/view-concept with automatical synchronisation between different views showing the same model</feature>
      <feature>Filling with horizontal/vertical color gradient and different line/point-styles</feature>
      <feature>Interpolation using linear lines or splines</feature>
      <feature>The diagram data can be modified by the user if wanted</feature>
	  <feature>Multiple axis and point rows as well as a legend naming the latter</feature>
	  <feature>Automatical calculation of the view range and support for floats</feature>
	  <feature>Standardmodels with lists of points, cyclic lists, and a model to merge other ones</feature>
      <feature>There is a help file</feature>
    </features>
    <screenshot>
      <title>grid like</title>
      <fullfile>img/sources/diagram2.png</fullfile>
      <height>304px</height>
    </screenshot>
    <screenshot>
      <title>filled</title>
      <fullfile>img/sources/diagram1.png</fullfile>
      <height>302px</height>
    </screenshot>
  </download>
  
  
  
  <download> 
    <title>Non-VCL Canvas</title>
    <file>nvcanvas.zip</file>
    <description_80 language="de">Eine Konvertierung des Delphi-Canvas nach Non-Vcl.</description_80>
    <description_80 language="en">A translation of the Delphi-Canvas to non vcl.</description_80>
    <prog-language>Delphi</prog-language>
    <source-license>MPL, GPL</source-license>
    <size_KB>27</size_KB>
    <content language="de"><![CDATA[Diese Quellcodesammlung ermöglicht es die üblichen Funktionen des Delphicanvas ohne die VCL-Codes zu benutzen, indem für jede VCL-Funktion eine Methode existiert, die direkt die entsprechende GDI-Funktion auffruft.<br>
Ihre wichtigsten Elemente sind:]]></content>
    <content language="en"><![CDATA[You can draw in a non vcl as if you would be able to use the normal Delphi, when you use this units. They contain a methode as replacement for every TCanvas methode.<br>
The most important features are:]]></content>
    <features language="de">
      <feature>Funktionen zum Zeichnen von Ellipsen, Linien, Rechtecken und Polygonen.</feature>
      <feature>Funktionen zum Kopieren von Bildausschnitten.</feature>
      <feature>Funktionen zur Ausgabe von Text.</feature>
      <feature>Klassen zur Einstellung von Vorder- und Hintergrundfarbe.</feature>
      <feature>Eine Klasse zum Einstellen von Fonteigenschaften.</feature>
      <feature>Eine Hash-klasse und ein Ressourcenmanager.</feature>
    </features>
    <features language="en">
      <feature>Functions for drawing texts, ellipses, lines, rectangles and polygones.</feature>
      <feature>Functions for copying parts of pictures.</feature>
      <feature>Classes for setting font, pen and brush properties.</feature>
      <feature>A hash class and a ressources manager.</feature>
    </features>
    <final-content language="de"><![CDATA[In einigen Bereichen sind sie den Delphimethoden sogar überlegen, so kann man beispielweise den Text auch gedreht ausgeben.<br>Es gibt eine ausführliche HTML-Doku, in der alle Funktionen beschrieben sind. ]]></final-content>
    <final-content language="en"><![CDATA[In some field they are even better than the Delphi functions, for example they can draw rotated text.<br>There is a good, German help, and you could use the documentation of TCanvas from Delphi. ]]></final-content>
  </download>
  
  
  
  <download>
    <title>BBUtils</title>
    <link type="onlinedocu"/>
    <file>bbutils.zip</file>
    <id>bbutils</id>
    <description_80 language="de">Häufig benötigte Funktionen, die einem bei FPC fehlen.</description_80>
    <description_80 language="en">Often needed functions missing in FPC.</description_80>
    <prog-language>FPC</prog-language>
    <source-license>GPL</source-license>
    <content language="de">In diesen Units habe ich einige kleine Funktionen gesammelt, die einem bei der Programmierung mit FPC ständig fehlen. Es gibt:</content>
    <content language="en">These units consist of function which you need very often, when programming in FPC. You can use it to</content>
    <features language="de">
      <feature>Alle möglichen Arrayfunktionen (hinzufügen, löschen, vergleichen, ...)</feature>
      <feature>Alle möglichen Stringfunktionen (pchar/ansistring, vergleichen, zerlegen, suchen, umwandeln, html-Entities, ...)</feature>
      <feature>Mathematische Funktionen (ggt, Primzahlen, Bernoulli-Wahrscheinlichkeitsrechnung,...)</feature>
      <feature>Automatische Übersetzung von mit tr['markierten String'] und Lazaruskomponenten</feature>
    </features>
    <features language="en">
      <feature>Various array functions (add, delete, search, prealloc, ...)</feature>
      <feature>Various string functions (pchar/ansistring, compare, split, search, convert, html entities, ...)</feature>
      <feature>Mathematical functions (gcd, primes, Bernoulli statistics,...)</feature>
      <feature>Automatical translation of with tr['marked strings'] and components</feature>
    </features>
  </download>
  
  
  
  
  <download>
    <title>Diffreader</title>
    <file>diffreader.zip</file>
    <id>diffreader</id>
    <description_80 language="de">Eine Unit zum Lesen und Schreiben von Unified Diffs.</description_80>
    <description_80 language="en">A unit to read and write unified diffs.</description_80>
    <prog-language>FPC</prog-language>
    <source-license>GPL</source-license>
    <content language="de">Mit dieser Unit kann man ein Unified Diff in ein strukturiertes Format einlesen, verarbeiten und wieder als gültiges Diff speichern</content>
    <content language="en">You can use this unit to read a Unified Diff, do some work on its tree structure and save it finally. </content>
    <features language="de">
      <feature>Liest Unified Diffs für eine oder mehrere Dateien</feature>
      <feature>Erzeugt gültige Diffs</feature>
      <feature>Besitzt Funktionen um unnötige Daten zu entfernen (siehe mein Programm &lt;a href="tools_de.html#simplifydiff">Simplify Diff&lt;/a>)</feature>
    </features>
    <features language="en">
      <feature>Reads Unified Diffs of one or many files</feature>
      <feature>Creates valid diffs</feature>
      <feature>Has functions to remove unnecessary data (see also &lt;a href="tools_en.html#simplifydiff">Simplify Diff&lt;/a>)</feature>
    </features>
  </download>
  
  
  <download> 
    <title>TCVirus</title>
    <file>cvirus.zip</file>
    <description_80 language="de">Eine Unit/Komponente zum Entwickeln von Scherzprogrammen</description_80>
    <description_80 language="en">An unit/component for the development of joke programs</description_80>
    <prog-language>Delphi</prog-language>
    <source-license>MPL, GPL</source-license>
    <size_KB>40</size_KB>
    <content language="de">TCvirus hat (unter anderem) folgende Funktionen:</content>
    <content language="en">These are the most important features of TCvirus:</content>
    <features language="de">
      <feature>Es liefert einen Canvas für das direkte Zeichnen auf den Bildschirm, unabhängig von geöffneten Fenstern.</feature>
      <feature>Man kann den Bildschirm spiegeln</feature>
      <feature>Es liefert Windowshandle für wichtige Objekte, wie dem Startbutton, der Taskleite und des Desktops, über die sie dann verändert werden können.</feature>
      <feature>Man kann das Programm vor dem Taskmanager verstecken.</feature>
      <feature>Man kann die CD-Schublade öffnen und schließen.</feature>
    </features>
    <features language="en">
      <feature>It gives a canvas for direct drawing on the screen.</feature>
      <feature>It can mirror the screen.</feature>
      <feature>It returns handle of important objects like the task button, the task list, and the desktop.</feature>
      <feature>It can hide your program from the task manager.</feature>
      <feature>It can open and close the CD door.</feature>
    </features>
    <final-content language="de"><![CDATA[Da TCvirus ursprünglich eine Komponente war, gibt es zwei Units: Eine mit den eigentlichen Funktionen, und eine Komponente, die einen Wrapper für die erste Unit darstellt.<br>Will man die Komponente ohne die VCL nutzen, benötigt man meinen Non-VCL Canvas, der aber im Ziparchiv enthalten ist.]]></final-content>
    <final-content language="en">Because TCvirus has originally been a component, there are 2 units, a component for the VCL and a unit for non VCL.</final-content>
  </download>



  <download> 
    <title>TAutoUpdater</title>
    <file>autoupdate.zip</file>
    <description_80 language="de">Eine Unit für ein automatisches Progammupdate</description_80>
    <description_80 language="en">An unit for an automatically update</description_80>
    <prog-language>FPC</prog-language>
    <source-license>GPL</source-license>
    <size_KB>10</size_KB>
    <content language="de"><![CDATA[Hiermit kann man in ein Programm ein automatisches Update übers Internet einbauen.<br>Um die Klasse benutzen zu können, braucht man eine wininet-Unit, die die Windowsinternetfunktionen enthält. (<a href="#internettools">oben</a> gibt es eine neuere Version, die ein besser konfigurierbares XML-Format verwendet)
Funktionen:]]></content>
    <content language="en"><![CDATA[This allows an automatical update about the internt.<br>
To use the class you need a wininet unit containing the windows internet functions (<a href="#internettools">above is a new class which use a better customizable xml format</a>).<br>Features:]]></content>
    <features language="de">
      <feature>Erkennen neuer Versionen</feature>
      <feature>Download dieser</feature>
      <feature>Ersetzen des eigenen Programms unter Windows NT und 9x-Schiene</feature>
      <feature>Erkennen von Rechtemangel unter (Windows NT,...)</feature>
    </features>
    <features language="en">
      <feature>check for new versions</feature>
      <feature>download them in a compressed zip archive</feature>
      <feature>extract this</feature>
      <feature>replace the current executable with the new one on every Windows</feature>
      <feature>detect missing access rights on Windows NT...</feature>
    </features>
  </download>
  <download> 
    <title>SimpleBrowser</title>
    <file>simplebrowser.zip</file>
    <description_80 language="de">Ein kleiner, IE-basierter Browser</description_80>
    <description_80 language="en">A simple IE-based browser</description_80>
    <prog-language>(Delphi), (EXE)</prog-language>
    <source-license>GPL</source-license>
    <size_KB>189</size_KB>
    <content language="de"><![CDATA[Dies ist ein kleiner Browser, der auf dem Internet Explorer basiert.<br>
Für einen Normaluser ist er vollkommen nutzlos, sein Aussehen kann aber beim Aufruf durch Kommandozeilenparameter festgelegt werden, was manchmal recht praktisch ist, wenn man nur eine bestimmte Seite anzeigen will.]]></content>
    <content language="en"><![CDATA[This is a small browser based on the IE.<br>
It is completely useless for a normal user, but you can use it to implement a browser for a certain web page in your program. The appearance and behaviour can be controlled over command line switches, so it allows, for example restricted access.]]></content>
  </download>
  <download> 
    <title>Huffmankomprimierer</title>
    <file>huffman.zip</file>
    <description_80 language="de">Eine Funktionssammlung für Huffman(de-)komprimierung.</description_80>
    <description_80 language="en">A collection of function for huffman (de-)compression.</description_80>
    <prog-language>Delphi</prog-language>
    <source-license>MPL, GPL</source-license>
    <size_KB>13</size_KB>
    <content language="de"><![CDATA[Diese Unit ermöglicht die (De-)Kompression von Strings mit dem Huffmanverfahren. In dem entstehenden, komprimierten String wird jedes Zeichen nicht mehr mit 8 Bit gespeichert, sondern die Bitlänge ist variabel, so dass häufige Zeichen mit weniger Bits als seltene gespeichert werden.<br>
Es ist auch möglich Unicodestring, Arrays und Dateien zu komprimieren, indem sie von den entsprechenden Funktionen einfach als Ansistring interpretiert werden. <br>Die Unit läuft auch ohne die VCL.<br>Besonders eignet sich das Verfahren für normale Texte und andere Daten, wo einige wenige Zeichen sehr oft wiederholt werden. In beinahe jedem Fall ist die Kompressionsrate aber geringer als von modernen Komprimierungsverfahren, wie Rar oder Ace.]]></content>
    <content language="en"><![CDATA[This unit can (de-)compress strings with using the huffman algorithm. In a compressed string a character isn't stored with 8 bit, but the bit count is different.<br>
It is also possible to compress strings in the Unicode Format, arrays and files. These types are simply regarded as Ansi Strings.
<br>This unit doesn't need the VCL.<br>You get the best compression rates in data which contains many equal characters, but it is always worse than modern compression processes like ACE or RAR.]]></content>
  </download>
  <download> 
    <title>TRegExpr</title>
    <file>regexpr.zip</file>
    <id>regexpr</id>
    <description_80 language="de">Kopie von TRegExpr von Andrey V. Sorokin</description_80>
    <description_80 language="en">Mirror of TRegExpr of Andrey V. Sorokin</description_80>
    <prog-language>Delphi, FPC</prog-language>
    <source-license>GPL</source-license>
    <content language="de">Dies ist eine Kopie von TRegExpr 0.952 von Andrey V. Sorokin, dessen Seite www.regexpstudio.com tot zu sein scheint. Im wesentlichen ist eine Bibliothek für reguläre Ausdrücke, die sämtliche Regexp-Operationen unterstützt, inklusive Backtracking. &lt;br>Ich habe ein paar Zeilen geändert, damit es besser mit FPC funktioniert, die größte Änderung ist im Grunde, dass ich die Unit umbenannt habe.</content>
    <content language="en">This is a mirror of TRegExpr of Andrey V. Sorokin whose page www.regexpstudio.com seems to be vanished from the internet. It is a highly advanced regular expression parser which supports all regexp operations, even backtracking. Hence, although it was written in 2004, it is still more advanced than most regexpr packages. &lt;br> This copy is a little bit modified to improve fpc support, one of the biggest changes is that I renamed the file to dregexpr.</content>
  </download>

</file>
